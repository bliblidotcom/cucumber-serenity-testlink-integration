[
  {
    "line": 2,
    "elements": [
      {
        "line": 72,
        "name": "Create a redemption history with logonId",
        "description": "",
        "id": "create-reward-transaction-history;create-a-redemption-history-\u003ccondition\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9101300500,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 663054900,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18542200,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data deviceId with value \"\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5678700,
              "status": "passed"
            },
            "line": 10,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2084000,
              "status": "passed"
            },
            "line": 11,
            "name": "[reward-transaction] prepare request data transactionId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "transactionId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 68
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 246106900,
              "status": "passed"
            },
            "line": 12,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027transactionId\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2262600,
              "status": "passed"
            },
            "line": 15,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRewardHistoryRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRewardHistoryRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3153919800,
              "status": "passed"
            },
            "line": 16,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 22438600,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31899100,
              "status": "passed"
            },
            "line": 18,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 44675400,
              "status": "passed"
            },
            "line": 19,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027logonId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027logonId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027deviceId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027deviceId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027transactionId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027transactionId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2475932300,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 28,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_history),\n    find(({\n      transactionId: \u0027,request($[\u0027transactionId\u0027]),\u0027\n    })),\n    limit(1)\n  )"
            }
          },
          {
            "result": {
              "duration": 75563600,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027transactionId\u0027])",
                  "EQUAL",
                  "request($[\u0027transactionId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027logonId\u0027])",
                  "EQUAL",
                  "request($[\u0027logonId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027deviceId\u0027])",
                  "EQUAL",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 398806500,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] try DELETE request to \"/redemption/_history\" with parameter",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithParameter(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "key",
                  "value"
                ]
              },
              {
                "cells": [
                  "transactionId",
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027transactionId\u0027])"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7932500,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign previous response data to deleteRewardHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "deleteRewardHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2302200,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5346400,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 851847900,
              "status": "passed"
            },
            "line": 56,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 57,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_history),\n    find(({\n      transactionId: \u0027,request($[\u0027transactionId\u0027]),\u0027\n    })),\n    limit(1)\n  )"
            }
          },
          {
            "result": {
              "duration": 6673100,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 73,
        "name": "Create a redemption history with logonId and deviceId",
        "description": "",
        "id": "create-reward-transaction-history;create-a-redemption-history-\u003ccondition\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 242217800,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4794400,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10865500,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4967300,
              "status": "passed"
            },
            "line": 10,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3372600,
              "status": "passed"
            },
            "line": 11,
            "name": "[reward-transaction] prepare request data transactionId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "transactionId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 68
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29810500,
              "status": "passed"
            },
            "line": 12,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027transactionId\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3034700,
              "status": "passed"
            },
            "line": 15,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRewardHistoryRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRewardHistoryRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 186033900,
              "status": "passed"
            },
            "line": 16,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2072600,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1511600,
              "status": "passed"
            },
            "line": 18,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9774500,
              "status": "passed"
            },
            "line": 19,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027logonId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027logonId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027deviceId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027deviceId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027transactionId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027transactionId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 556602200,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 28,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_history),\n    find(({\n      transactionId: \u0027,request($[\u0027transactionId\u0027]),\u0027\n    })),\n    limit(1)\n  )"
            }
          },
          {
            "result": {
              "duration": 11717000,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027transactionId\u0027])",
                  "EQUAL",
                  "request($[\u0027transactionId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027logonId\u0027])",
                  "EQUAL",
                  "request($[\u0027logonId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027deviceId\u0027])",
                  "EQUAL",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 124819100,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] try DELETE request to \"/redemption/_history\" with parameter",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithParameter(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "key",
                  "value"
                ]
              },
              {
                "cells": [
                  "transactionId",
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027transactionId\u0027])"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2033400,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign previous response data to deleteRewardHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "deleteRewardHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1795600,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4229100,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 549034600,
              "status": "passed"
            },
            "line": 56,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 57,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_history),\n    find(({\n      transactionId: \u0027,request($[\u0027transactionId\u0027]),\u0027\n    })),\n    limit(1)\n  )"
            }
          },
          {
            "result": {
              "duration": 3671000,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 76,
        "name": "Redemption history should be unique per transaction id",
        "description": "",
        "id": "create-reward-transaction-history;redemption-history-should-be-unique-per-transaction-id",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 21837200,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3525600,
              "status": "passed"
            },
            "line": 79,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2857800,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3694400,
              "status": "passed"
            },
            "line": 81,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2104800,
              "status": "passed"
            },
            "line": 82,
            "name": "[reward-transaction] prepare request data transactionId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "transactionId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 68
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58530600,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027transactionId\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3580100,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRewardHistoryRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRewardHistoryRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 296469300,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1912100,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1563800,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6791700,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027logonId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027logonId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027deviceId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027deviceId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027transactionId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027transactionId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 494769100,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 99,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_history),\n    find(({\n      transactionId: \u0027,request($[\u0027transactionId\u0027]),\u0027\n    })),\n    limit(1)\n  )"
            }
          },
          {
            "result": {
              "duration": 9786300,
              "status": "passed"
            },
            "line": 109,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027transactionId\u0027])",
                  "EQUAL",
                  "request($[\u0027transactionId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027logonId\u0027])",
                  "EQUAL",
                  "request($[\u0027logonId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027deviceId\u0027])",
                  "EQUAL",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7673100,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRewardHistoryRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRewardHistoryRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 252635700,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1971500,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1573500,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response statusCode should be 500 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 97525000,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] try DELETE request to \"/redemption/_history\" with parameter",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithParameter(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "key",
                  "value"
                ]
              },
              {
                "cells": [
                  "transactionId",
                  "request($[\u0027transactionId\u0027])"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2023500,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] assign previous response data to deleteRewardHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "deleteRewardHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2095300,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4251200,
              "status": "passed"
            },
            "line": 127,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 566155800,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_history),\n    find(({\n      transactionId: \u0027,request($[\u0027transactionId\u0027]),\u0027\n    })),\n    limit(1)\n  )"
            }
          },
          {
            "result": {
              "duration": 3841800,
              "status": "passed"
            },
            "line": 143,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 163,
        "name": "Create redemption history when voucherSku is empty",
        "description": "",
        "id": "create-reward-transaction-history;create-redemption-history-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 23139300,
              "status": "passed"
            },
            "line": 149,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4171700,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "",
                  "random(23)",
                  "(test_,random(10,NUMERIC),@test.com)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1825500,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRewardHistoryRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRewardHistoryRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 204033500,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2183700,
              "status": "passed"
            },
            "line": 155,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2258200,
              "status": "passed"
            },
            "line": 156,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8425700,
              "status": "passed"
            },
            "line": 157,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 164,
        "name": "Create redemption history when transactionId is empty",
        "description": "",
        "id": "create-reward-transaction-history;create-redemption-history-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 22578100,
              "status": "passed"
            },
            "line": 149,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5679000,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "random(23)",
                  "",
                  "(test_,random(10,NUMERIC),@test.com)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1815000,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRewardHistoryRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRewardHistoryRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 301705600,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5917400,
              "status": "passed"
            },
            "line": 155,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1613000,
              "status": "passed"
            },
            "line": 156,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6951100,
              "status": "passed"
            },
            "line": 157,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 165,
        "name": "Create redemption history when logonId is empty",
        "description": "",
        "id": "create-reward-transaction-history;create-redemption-history-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16816200,
              "status": "passed"
            },
            "line": 149,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3730200,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "random(23)",
                  "random(23)",
                  "",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3090400,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRewardHistoryRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRewardHistoryRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 261092800,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1667900,
              "status": "passed"
            },
            "line": 155,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1476800,
              "status": "passed"
            },
            "line": 156,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3741900,
              "status": "passed"
            },
            "line": 157,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 166,
        "name": "Create redemption history when body is empty",
        "description": "",
        "id": "create-reward-transaction-history;create-redemption-history-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17828000,
              "status": "passed"
            },
            "line": 149,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3330800,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "",
                  "",
                  "",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4807200,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] prepare body request with value \"{}\"",
            "match": {
              "arguments": [
                {
                  "val": "{}",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 180551900,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1591300,
              "status": "passed"
            },
            "line": 155,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1361100,
              "status": "passed"
            },
            "line": 156,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4664900,
              "status": "passed"
            },
            "line": 157,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 167,
        "name": "Create redemption history when body is not valid",
        "description": "",
        "id": "create-reward-transaction-history;create-redemption-history-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 27576600,
              "status": "passed"
            },
            "line": 149,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2769200,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "",
                  "",
                  "",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3727400,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] prepare body request with value \"abc\"",
            "match": {
              "arguments": [
                {
                  "val": "abc",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85243200,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2116000,
              "status": "passed"
            },
            "line": 155,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1886000,
              "status": "passed"
            },
            "line": 156,
            "name": "[reward-transaction] response statusCode should be 500 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3859300,
              "status": "passed"
            },
            "line": 157,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "500"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Create reward transaction history",
    "description": "",
    "id": "create-reward-transaction-history",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/history-controller/CreateRedemptionHistory.feature",
    "tags": [
      {
        "name": "@CreateRedemptionHistoryFeature",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionHistory",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 33
        }
      },
      {
        "name": "@TestSuiteId\u003d13825488",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 59
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Delete redemption history in reward transaction",
        "description": "",
        "id": "delete-redemption-history-in-reward-transaction;delete-redemption-history-in-reward-transaction",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15735900,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1763500,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1798900,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1784800,
              "status": "passed"
            },
            "line": 10,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2609100,
              "status": "passed"
            },
            "line": 11,
            "name": "[reward-transaction] prepare request data transactionId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "transactionId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 68
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23031300,
              "status": "passed"
            },
            "line": 12,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027transactionId\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1824900,
              "status": "passed"
            },
            "line": 15,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRewardHistoryRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRewardHistoryRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 113876800,
              "status": "passed"
            },
            "line": 16,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1753600,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1842300,
              "status": "passed"
            },
            "line": 18,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6537700,
              "status": "passed"
            },
            "line": 19,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027logonId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027logonId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027deviceId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027deviceId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027transactionId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027transactionId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 495489500,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 28,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_history),\n    find(({\n      transactionId: \u0027,request($[\u0027transactionId\u0027]),\u0027\n    })),\n    limit(1)\n  )"
            }
          },
          {
            "result": {
              "duration": 8641400,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027transactionId\u0027])",
                  "EQUAL",
                  "request($[\u0027transactionId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027logonId\u0027])",
                  "EQUAL",
                  "request($[\u0027logonId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027deviceId\u0027])",
                  "EQUAL",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 181761900,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] try DELETE request to \"/redemption/_history\" with parameter",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithParameter(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "key",
                  "value"
                ]
              },
              {
                "cells": [
                  "transactionId",
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027transactionId\u0027])"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1456300,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign previous response data to deleteRewardHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "deleteRewardHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1563900,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2985500,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 608686200,
              "status": "passed"
            },
            "line": 56,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 57,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_history),\n    find(({\n      transactionId: \u0027,request($[\u0027transactionId\u0027]),\u0027\n    })),\n    limit(1)\n  )"
            }
          },
          {
            "result": {
              "duration": 19511400,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@DeleteRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 85,
        "name": "Delete redemption history when voucherSku is empty",
        "description": "",
        "id": "delete-redemption-history-in-reward-transaction;delete-redemption-history-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 21779500,
              "status": "passed"
            },
            "line": 73,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 241871700,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] try DELETE request to \"/redemption/_history\" with parameter",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithParameter(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "key",
                  "value"
                ]
              },
              {
                "cells": [
                  "transactionId",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1690500,
              "status": "passed"
            },
            "line": 77,
            "name": "[reward-transaction] assign previous response data to deleteRewardHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "deleteRewardHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2118900,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3967200,
              "status": "passed"
            },
            "line": 79,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@DeleteRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 86,
        "name": "Delete redemption history when voucherSku is not found",
        "description": "",
        "id": "delete-redemption-history-in-reward-transaction;delete-redemption-history-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17088500,
              "status": "passed"
            },
            "line": 73,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 135872200,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] try DELETE request to \"/redemption/_history\" with parameter",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithParameter(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "key",
                  "value"
                ]
              },
              {
                "cells": [
                  "transactionId",
                  "random(100)"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2939200,
              "status": "passed"
            },
            "line": 77,
            "name": "[reward-transaction] assign previous response data to deleteRewardHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "deleteRewardHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2089000,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3429300,
              "status": "passed"
            },
            "line": 79,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@DeleteRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Delete redemption history in reward transaction",
    "description": "",
    "id": "delete-redemption-history-in-reward-transaction",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/history-controller/DeleteRedemptionHistory.feature",
    "tags": [
      {
        "name": "@DeleteRedemptionHistoryFeature",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionHistory",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 33
        }
      },
      {
        "name": "@TestSuiteId\u003d13825488",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 59
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 61,
        "name": "Create global type for each logon id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14652100,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2264400,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10357200,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 7610400,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 12683700,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21462000,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4111300,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 425801900,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9125500,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1646200,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5107800,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4735700,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 120286300,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2291300,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1671700,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9748600,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 524577300,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 4405492400,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 62,
        "name": "Create global type for each device id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13611700,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 29092900,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2381800,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2475700,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 7039800,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10802400,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2719200,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 188899700,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3588400,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1856500,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2136700,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4207400,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 288499200,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1696600,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1347100,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8271600,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 350289700,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 327467800,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 63,
        "name": "Create global type for each logon id and device id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17161500,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1966200,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2302900,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2157600,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 5766300,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7073800,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2747100,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1239796800,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2994200,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1751800,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2510000,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3831100,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 76113000,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2234300,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1799700,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4739700,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 350282800,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 310974000,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 64,
        "name": "Create global and period type for each logon id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 19066400,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3834800,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2714400,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2553000,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 7325600,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5220300,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2181700,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 158211400,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2378900,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1561200,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2114300,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3114500,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 78747800,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3054400,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1790500,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4371700,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 314607200,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 304093800,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 65,
        "name": "Create global and period type for each device id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 31884800,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9069200,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2248500,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 3304400,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 6448200,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19092300,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2545500,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 376801600,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2292100,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1490700,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2199000,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3396900,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 172390900,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2085300,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1647300,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4234700,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 371073400,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 349685400,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 66,
        "name": "Create global and period type for each logon id and device id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16877900,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2771500,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2634400,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2416300,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 4842500,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6530500,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2544100,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 213505000,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1577100,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1268400,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1801500,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3428900,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 99001000,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4462600,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1497700,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3719200,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 311409100,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 382947900,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 67,
        "name": "Create period type for each logon id and device id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16133800,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1773100,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2014600,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2041900,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 5630700,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5297100,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2280100,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 98480200,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2110000,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2165500,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2390200,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3137600,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 66970200,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2081000,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1718200,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7068900,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 364274300,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 346597700,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 68,
        "name": "Create period type for each logon id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12962500,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3210500,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2195600,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2774900,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3958000,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7819900,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1655300,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89218200,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2551500,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1522300,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1895100,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3069300,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 73092600,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4051000,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3893700,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5753300,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 489482700,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 430173400,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 69,
        "name": "Create period type for each device id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 19445500,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2317300,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3070900,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2468800,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 5171500,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11184400,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2300200,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 113583300,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2282600,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1908500,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2212500,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3970500,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 74879900,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1663900,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1726100,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5328800,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 344285200,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 531165800,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 154,
        "name": "Update existing redemption rule to global type for each logon id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15584000,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2647900,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2916600,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3505200,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5640200,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10601700,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1998100,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 119529700,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1783700,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1733900,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1859400,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4195200,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 82461700,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2376500,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2325100,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3302800,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1530400,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1687000,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 5699400,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5652500,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3425900,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 273443000,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2034400,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1696900,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2136100,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3669900,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 81397800,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1821700,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1687500,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4147300,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 319300900,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 1669886700,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 155,
        "name": "Update existing redemption rule to global type for each device id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 19328600,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1687100,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2946200,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2478400,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5147500,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6557000,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3047300,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 127416000,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1835500,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2170600,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2732500,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5160000,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 84490500,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1531500,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1803400,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3975900,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2867700,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2332500,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 4031700,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4807400,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2919400,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 77502800,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1987200,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1664300,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2492900,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3568500,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 80228900,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1137400,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1457200,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4208400,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 417654100,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 346589000,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 156,
        "name": "Update existing redemption rule to global type for each logon id and device id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14171000,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2197600,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2166200,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2043300,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3972400,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4729800,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2141100,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 159668000,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1665200,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1678900,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1758100,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3213400,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 73445400,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2255400,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1351600,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4472400,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2259400,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2616300,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 4622400,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8121700,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3355400,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85482500,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2008500,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1559400,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2197300,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2956900,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 73652500,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2010700,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1532700,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3724000,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 332800400,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 437982600,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 157,
        "name": "Update existing redemption rule to global and period type for each logon id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 19735700,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2625600,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2382700,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2500700,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5151600,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16080800,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2598100,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 275771800,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1580400,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1261400,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1920300,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3952100,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 258821500,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2036100,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2125800,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3895200,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2306600,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2237100,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 5295300,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6629700,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3473300,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104954000,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2013000,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1740600,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2027500,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2678000,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 62714600,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1794400,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1432100,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4110300,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 345800600,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 358658600,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 158,
        "name": "Update existing redemption rule to global and period type for each device id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13083400,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3238600,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2240100,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1906600,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4471300,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5780400,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2784700,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 160313800,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2725800,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1821900,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2023100,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3641000,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 86872900,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1693700,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1653900,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3771000,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2286000,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2216100,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3817700,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4164000,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4690100,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79325500,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2466800,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2556700,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2941100,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3543300,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 83865200,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1834000,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1642500,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3619500,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 310343000,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 310944200,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 159,
        "name": "Update existing redemption rule to global and period type for each logon id and device id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16674300,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3406900,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1543900,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1985900,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3556600,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3757400,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1783400,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85072800,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2226100,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1478200,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2018300,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2457100,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 58135900,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1828900,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1490800,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3929600,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1656300,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1828500,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 2801900,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3657000,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4687500,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 75570800,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1725100,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1572700,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1701500,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3081200,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 71147500,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1605100,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1422500,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3618000,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 335460600,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 299465800,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 160,
        "name": "Update existing redemption rule to period type for each logon id and device id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17480000,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2801200,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2457800,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8026300,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3331800,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18947800,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2733500,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 75281400,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1413500,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1561200,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1895900,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3200100,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 59117400,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1942200,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1163700,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3279400,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1960100,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1842800,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 2994100,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3107700,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2694800,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79198200,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2281700,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1812400,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2340800,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3159200,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 66352300,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1389600,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1619300,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3264700,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 443178600,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 299499800,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 161,
        "name": "Update existing redemption rule to period type for each logon id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16405400,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1764200,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1841500,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1405500,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3826500,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3988900,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1372500,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 156265600,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1736300,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1341000,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1435300,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2537700,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 62923300,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1407100,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1258000,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2708300,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1144200,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1624000,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3425000,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3329900,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3208500,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74602600,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1639300,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1231300,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1596700,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2676500,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 67333100,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1679000,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2234700,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3274400,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 377023900,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 731714400,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 162,
        "name": "Update existing redemption rule to period type for each device id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 19205700,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1983900,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2485600,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1129400,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5077400,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3974500,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1467600,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 187354800,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1802000,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1349900,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1989200,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3435300,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 78706700,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1807900,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1254200,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2885800,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1991000,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1750400,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3724500,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5077800,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2377800,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83814800,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1629100,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1559200,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2353100,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3856900,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 64309700,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1716000,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1319200,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2997800,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 545265300,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 376107400,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 247,
        "name": "Disabling redemption rule to by removing type",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;disabling-redemption-rule-to-by-removing-\u003cidentifier\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 24655600,
              "status": "passed"
            },
            "line": 167,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2505000,
              "status": "passed"
            },
            "line": 168,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1948200,
              "status": "passed"
            },
            "line": 169,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4204000,
              "status": "passed"
            },
            "line": 171,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3384300,
              "status": "passed"
            },
            "line": 173,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4044200,
              "status": "passed"
            },
            "line": 176,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1423100,
              "status": "passed"
            },
            "line": 179,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 145618600,
              "status": "passed"
            },
            "line": 180,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1823600,
              "status": "passed"
            },
            "line": 181,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1751500,
              "status": "passed"
            },
            "line": 182,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1686200,
              "status": "passed"
            },
            "line": 183,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2557500,
              "status": "passed"
            },
            "line": 185,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 83976100,
              "status": "passed"
            },
            "line": 186,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2405500,
              "status": "passed"
            },
            "line": 187,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1309000,
              "status": "passed"
            },
            "line": 188,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4381900,
              "status": "passed"
            },
            "line": 189,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2187300,
              "status": "passed"
            },
            "line": 195,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 196,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1626000,
              "status": "passed"
            },
            "line": 199,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 200,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 4273100,
              "status": "passed"
            },
            "line": 203,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4670100,
              "status": "passed"
            },
            "line": 206,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2565200,
              "status": "passed"
            },
            "line": 209,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 182743300,
              "status": "passed"
            },
            "line": 210,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1607400,
              "status": "passed"
            },
            "line": 211,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1769100,
              "status": "passed"
            },
            "line": 212,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1883900,
              "status": "passed"
            },
            "line": 213,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3502100,
              "status": "passed"
            },
            "line": 215,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 58722500,
              "status": "passed"
            },
            "line": 216,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1948900,
              "status": "passed"
            },
            "line": 217,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1450400,
              "status": "passed"
            },
            "line": 218,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3439400,
              "status": "passed"
            },
            "line": 219,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 325879800,
              "status": "passed"
            },
            "line": 225,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 226,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 379568400,
              "status": "passed"
            },
            "line": 235,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 236,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 248,
        "name": "Disabling redemption rule to by removing validation",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;disabling-redemption-rule-to-by-removing-\u003cidentifier\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 21841100,
              "status": "passed"
            },
            "line": 167,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2468700,
              "status": "passed"
            },
            "line": 168,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2151700,
              "status": "passed"
            },
            "line": 169,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2180900,
              "status": "passed"
            },
            "line": 171,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10832300,
              "status": "passed"
            },
            "line": 173,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4355300,
              "status": "passed"
            },
            "line": 176,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2066200,
              "status": "passed"
            },
            "line": 179,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 116439700,
              "status": "passed"
            },
            "line": 180,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1980000,
              "status": "passed"
            },
            "line": 181,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1531900,
              "status": "passed"
            },
            "line": 182,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1415800,
              "status": "passed"
            },
            "line": 183,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2799900,
              "status": "passed"
            },
            "line": 185,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 58105000,
              "status": "passed"
            },
            "line": 186,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1586600,
              "status": "passed"
            },
            "line": 187,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1264900,
              "status": "passed"
            },
            "line": 188,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3071600,
              "status": "passed"
            },
            "line": 189,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1790500,
              "status": "passed"
            },
            "line": 195,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 196,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 1664000,
              "status": "passed"
            },
            "line": 199,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 200,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 3712300,
              "status": "passed"
            },
            "line": 203,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3599200,
              "status": "passed"
            },
            "line": 206,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4023700,
              "status": "passed"
            },
            "line": 209,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 70743000,
              "status": "passed"
            },
            "line": 210,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1876000,
              "status": "passed"
            },
            "line": 211,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2052100,
              "status": "passed"
            },
            "line": 212,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2544100,
              "status": "passed"
            },
            "line": 213,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3863000,
              "status": "passed"
            },
            "line": 215,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 86112500,
              "status": "passed"
            },
            "line": 216,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1925500,
              "status": "passed"
            },
            "line": 217,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1315000,
              "status": "passed"
            },
            "line": 218,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3740800,
              "status": "passed"
            },
            "line": 219,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 339095000,
              "status": "passed"
            },
            "line": 225,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 226,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 494317500,
              "status": "passed"
            },
            "line": 235,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 236,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 249,
        "name": "Disabling redemption rule to by removing type and validation",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;disabling-redemption-rule-to-by-removing-\u003cidentifier\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 36220900,
              "status": "passed"
            },
            "line": 167,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3028100,
              "status": "passed"
            },
            "line": 168,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2413100,
              "status": "passed"
            },
            "line": 169,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1941300,
              "status": "passed"
            },
            "line": 171,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4051400,
              "status": "passed"
            },
            "line": 173,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3891000,
              "status": "passed"
            },
            "line": 176,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1787900,
              "status": "passed"
            },
            "line": 179,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 93644200,
              "status": "passed"
            },
            "line": 180,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1678200,
              "status": "passed"
            },
            "line": 181,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1801200,
              "status": "passed"
            },
            "line": 182,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1618300,
              "status": "passed"
            },
            "line": 183,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4278000,
              "status": "passed"
            },
            "line": 185,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 84786600,
              "status": "passed"
            },
            "line": 186,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1882400,
              "status": "passed"
            },
            "line": 187,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1474400,
              "status": "passed"
            },
            "line": 188,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3444200,
              "status": "passed"
            },
            "line": 189,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1487700,
              "status": "passed"
            },
            "line": 195,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 196,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 1444800,
              "status": "passed"
            },
            "line": 199,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 200,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 3080100,
              "status": "passed"
            },
            "line": 203,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2947000,
              "status": "passed"
            },
            "line": 206,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2269700,
              "status": "passed"
            },
            "line": 209,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83457500,
              "status": "passed"
            },
            "line": 210,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2601700,
              "status": "passed"
            },
            "line": 211,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1341100,
              "status": "passed"
            },
            "line": 212,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1694600,
              "status": "passed"
            },
            "line": 213,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2514000,
              "status": "passed"
            },
            "line": 215,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 63749200,
              "status": "passed"
            },
            "line": 216,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1637300,
              "status": "passed"
            },
            "line": 217,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1552700,
              "status": "passed"
            },
            "line": 218,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3810700,
              "status": "passed"
            },
            "line": 219,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 340823700,
              "status": "passed"
            },
            "line": 225,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 226,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 360914200,
              "status": "passed"
            },
            "line": 235,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 236,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 280,
        "name": "Create redemption rule when validations is null",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 30404700,
              "status": "passed"
            },
            "line": 254,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2145200,
              "status": "passed"
            },
            "line": 255,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2880400,
              "status": "passed"
            },
            "line": 256,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 257,
              "value": ""
            }
          },
          {
            "result": {
              "duration": 3475300,
              "status": "passed"
            },
            "line": 260,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 261,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 12946000,
              "status": "passed"
            },
            "line": 264,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "2",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4898900,
              "status": "passed"
            },
            "line": 267,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2019700,
              "status": "passed"
            },
            "line": 270,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 67445600,
              "status": "passed"
            },
            "line": 271,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1858000,
              "status": "passed"
            },
            "line": 272,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1545500,
              "status": "passed"
            },
            "line": 273,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2943600,
              "status": "passed"
            },
            "line": 274,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 281,
        "name": "Create redemption rule when types is null",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15999100,
              "status": "passed"
            },
            "line": 254,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2498700,
              "status": "passed"
            },
            "line": 255,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2260500,
              "status": "passed"
            },
            "line": 256,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 257,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2141300,
              "status": "passed"
            },
            "line": 260,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 261,
              "value": ""
            }
          },
          {
            "result": {
              "duration": 15496700,
              "status": "passed"
            },
            "line": 264,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "2",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4411600,
              "status": "passed"
            },
            "line": 267,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2871600,
              "status": "passed"
            },
            "line": 270,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 75450200,
              "status": "passed"
            },
            "line": 271,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2142400,
              "status": "passed"
            },
            "line": 272,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1379800,
              "status": "passed"
            },
            "line": 273,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3213400,
              "status": "passed"
            },
            "line": 274,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 282,
        "name": "Create redemption rule when total is \u003c 0",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14544900,
              "status": "passed"
            },
            "line": 254,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1944900,
              "status": "passed"
            },
            "line": 255,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1393800,
              "status": "passed"
            },
            "line": 256,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 257,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1469000,
              "status": "passed"
            },
            "line": 260,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 261,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 4520300,
              "status": "passed"
            },
            "line": 264,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "-1",
                  "2",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5628200,
              "status": "passed"
            },
            "line": 267,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1678900,
              "status": "passed"
            },
            "line": 270,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 77506700,
              "status": "passed"
            },
            "line": 271,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2279500,
              "status": "passed"
            },
            "line": 272,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1976500,
              "status": "passed"
            },
            "line": 273,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5214600,
              "status": "passed"
            },
            "line": 274,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 283,
        "name": "Create redemption rule when totalPerPeriod is \u003c 0",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15098700,
              "status": "passed"
            },
            "line": 254,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1477800,
              "status": "passed"
            },
            "line": 255,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1983900,
              "status": "passed"
            },
            "line": 256,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 257,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1929300,
              "status": "passed"
            },
            "line": 260,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 261,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2751700,
              "status": "passed"
            },
            "line": 264,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "1",
                  "-1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4764400,
              "status": "passed"
            },
            "line": 267,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2206100,
              "status": "passed"
            },
            "line": 270,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 73764000,
              "status": "passed"
            },
            "line": 271,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1548800,
              "status": "passed"
            },
            "line": 272,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1531000,
              "status": "passed"
            },
            "line": 273,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3183100,
              "status": "passed"
            },
            "line": 274,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 284,
        "name": "Create redemption rule when period is \u003c 0",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 18825100,
              "status": "passed"
            },
            "line": 254,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2264800,
              "status": "passed"
            },
            "line": 255,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2111300,
              "status": "passed"
            },
            "line": 256,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 257,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1755100,
              "status": "passed"
            },
            "line": 260,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 261,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 3799300,
              "status": "passed"
            },
            "line": 264,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "1",
                  "1",
                  "-1",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9543300,
              "status": "passed"
            },
            "line": 267,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1745200,
              "status": "passed"
            },
            "line": 270,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100826200,
              "status": "passed"
            },
            "line": 271,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1361800,
              "status": "passed"
            },
            "line": 272,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1514900,
              "status": "passed"
            },
            "line": 273,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3959100,
              "status": "passed"
            },
            "line": 274,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 285,
        "name": "Create redemption rule when body is empty",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 19044300,
              "status": "passed"
            },
            "line": 254,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2446300,
              "status": "passed"
            },
            "line": 255,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1556000,
              "status": "passed"
            },
            "line": 256,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 257,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 3193600,
              "status": "passed"
            },
            "line": 260,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 261,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 3446900,
              "status": "passed"
            },
            "line": 264,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "1",
                  "1",
                  "0",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4079200,
              "status": "passed"
            },
            "line": 267,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1737700,
              "status": "passed"
            },
            "line": 270,
            "name": "[reward-transaction] prepare body request with value \"{}\"",
            "match": {
              "arguments": [
                {
                  "val": "{}",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 73494100,
              "status": "passed"
            },
            "line": 271,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2094700,
              "status": "passed"
            },
            "line": 272,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1805800,
              "status": "passed"
            },
            "line": 273,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3075900,
              "status": "passed"
            },
            "line": 274,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 286,
        "name": "Create redemption rule when body is not valid",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14254100,
              "status": "passed"
            },
            "line": 254,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2440600,
              "status": "passed"
            },
            "line": 255,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1662300,
              "status": "passed"
            },
            "line": 256,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 257,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1485100,
              "status": "passed"
            },
            "line": 260,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 261,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2914100,
              "status": "passed"
            },
            "line": 264,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "1",
                  "1",
                  "0",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4545900,
              "status": "passed"
            },
            "line": 267,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2266500,
              "status": "passed"
            },
            "line": 270,
            "name": "[reward-transaction] prepare body request with value \"abc\"",
            "match": {
              "arguments": [
                {
                  "val": "abc",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82218000,
              "status": "passed"
            },
            "line": 271,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1882300,
              "status": "passed"
            },
            "line": 272,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1349400,
              "status": "passed"
            },
            "line": 273,
            "name": "[reward-transaction] response statusCode should be 500 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3810500,
              "status": "passed"
            },
            "line": 274,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "500"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Create redemption rule for voucher in reward transaction",
    "description": "",
    "id": "create-redemption-rule-for-voucher-in-reward-transaction",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/rule-controller/CreateRule.feature",
    "tags": [
      {
        "name": "@CreateRedemptionRuleFeature",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionRule",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 30
        }
      },
      {
        "name": "@TestSuiteId\u003d13825487",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 53
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 61,
        "name": "Get global type for each logon id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17379700,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2117400,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1804400,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1573300,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 7916100,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5177300,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5044200,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 152126400,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1437300,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1436600,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1473200,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2983900,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 59249600,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2086500,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1391600,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4731700,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 366678300,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 329909500,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 62,
        "name": "Get global type for each device id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16683900,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2475900,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2643600,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1349400,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2911700,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4150000,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1699000,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 81171600,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2219400,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1965200,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1905100,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2738200,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 71197200,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2586400,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2099700,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4443900,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 337354800,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 346115900,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 63,
        "name": "Get global type for each logon id and device id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15935800,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1224400,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1919800,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1928300,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 4278500,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3104500,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1484500,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 143429000,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1487700,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1668300,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1746900,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3344700,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 58294400,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1784700,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1687900,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4656200,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 303730800,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 319819300,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 64,
        "name": "Get global and period type for each logon id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13045300,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2310200,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2231300,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1939000,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 4141300,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4563500,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1576600,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 139379600,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2206600,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1450900,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1749100,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3165400,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 68848200,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1753500,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1539200,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3254200,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 311018100,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 312918900,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 65,
        "name": "Get global and period type for each device id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14802300,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1519000,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1777300,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1818300,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 2206000,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3882500,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1605800,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 132843500,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1569700,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1349700,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1668900,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2555800,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 63400500,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1985500,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1741900,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3333600,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 304248900,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 338879800,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 66,
        "name": "Get global and period type for each logon id and device id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15787200,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2564900,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1869600,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1852100,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3816600,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2830900,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1404300,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79176600,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1353100,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1234900,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2003900,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3375300,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 63196600,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1492300,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1516600,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3608800,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 314172900,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 336693500,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 67,
        "name": "Get period type for each logon id and device id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14004800,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1657000,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1554000,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1910400,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3538600,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4367300,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1693800,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 169593900,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1752500,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1504100,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1424900,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2737200,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 53602000,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2320600,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1271500,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4592200,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 302950400,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 345683000,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 68,
        "name": "Get period type for each logon id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15268900,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1594800,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1392000,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1837700,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 2714900,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2211400,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1519600,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 117968300,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1845900,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1910200,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1801200,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2996100,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 57834800,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1820900,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2262700,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4438000,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 322728200,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 344803200,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 69,
        "name": "Get period type for each device id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15505000,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1363200,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2441700,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2148500,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 5706100,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7408500,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2511800,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 174536700,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1989300,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1430200,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1454900,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3571100,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 159505100,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1253400,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1546500,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3894100,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 284681700,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 277757800,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 84,
        "name": "Get redemption rule when voucherSku is empty",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13983100,
              "status": "passed"
            },
            "line": 73,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1093600,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 291010600,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2421100,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1350700,
              "status": "passed"
            },
            "line": 77,
            "name": "[reward-transaction] response statusCode should be 405 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "405",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3127500,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027latestResponseData\u0027][\u0027body\u0027][\u0027status\u0027])",
                  "EQUAL",
                  "405"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 85,
        "name": "Get redemption rule when voucherSku is not found",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14797500,
              "status": "passed"
            },
            "line": 73,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1816500,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"random(100)\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "random(100)",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 61382600,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1027500,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1317700,
              "status": "passed"
            },
            "line": 77,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2131100,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Get redemption rule for voucher in reward transaction",
    "description": "",
    "id": "get-redemption-rule-for-voucher-in-reward-transaction",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/rule-controller/GetRedemptionRule.feature",
    "tags": [
      {
        "name": "@GetRedemptionRuleFeature",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionRule",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 27
        }
      },
      {
        "name": "@TestSuiteId\u003d13825487",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 50
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Create reward transaction system parameter in positive scenario",
        "description": "",
        "id": "create-system-parameter-in-reward-transaction;create-reward-transaction-system-parameter-in-positive-scenario",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15241000,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2660200,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1624500,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2126000,
              "status": "passed"
            },
            "line": 10,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7087000,
              "status": "passed"
            },
            "line": 11,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2308100,
              "status": "passed"
            },
            "line": 14,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 148847600,
              "status": "passed"
            },
            "line": 15,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4423200,
              "status": "passed"
            },
            "line": 16,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1239600,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4859400,
              "status": "passed"
            },
            "line": 18,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3075600,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 78219400,
              "status": "passed"
            },
            "line": 21,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6776900,
              "status": "passed"
            },
            "line": 22,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1600500,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7092000,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2816800,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 69942300,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1257900,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3131500,
              "status": "passed"
            },
            "line": 35,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 68840800,
              "status": "passed"
            },
            "line": 36,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1359800,
              "status": "passed"
            },
            "line": 37,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1108700,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3640400,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 45,
        "name": "Create duplicate reward transaction system parameter",
        "description": "",
        "id": "create-system-parameter-in-reward-transaction;create-duplicate-reward-transaction-system-parameter",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16349800,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1735200,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2062200,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1596100,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7364000,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1512200,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79328100,
              "status": "passed"
            },
            "line": 55,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1522700,
              "status": "passed"
            },
            "line": 56,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1065600,
              "status": "passed"
            },
            "line": 57,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1099800,
              "status": "passed"
            },
            "line": 58,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2070800,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 79741000,
              "status": "passed"
            },
            "line": 61,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1109900,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1028300,
              "status": "passed"
            },
            "line": 63,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3975800,
              "status": "passed"
            },
            "line": 64,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2340000,
              "status": "passed"
            },
            "line": 71,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 65366100,
              "status": "passed"
            },
            "line": 72,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1517300,
              "status": "passed"
            },
            "line": 73,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1466200,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] response statusCode should be 500 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2259700,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 67863700,
              "status": "passed"
            },
            "line": 77,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1228500,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2325000,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 77478600,
              "status": "passed"
            },
            "line": 81,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1344800,
              "status": "passed"
            },
            "line": 82,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1321700,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3044200,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 105,
        "name": "Create reward transaction system parameter when variable is empty",
        "description": "",
        "id": "create-system-parameter-in-reward-transaction;create-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14791700,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2761200,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "",
                  "random(10)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2097600,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 102199500,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1393700,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1236300,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2946100,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 106,
        "name": "Create reward transaction system parameter when value is empty",
        "description": "",
        "id": "create-system-parameter-in-reward-transaction;create-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11615600,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3496800,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(10)",
                  "",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1621400,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 88875900,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1845400,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1474800,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2391500,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 107,
        "name": "Create reward transaction system parameter when description is empty",
        "description": "",
        "id": "create-system-parameter-in-reward-transaction;create-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12449800,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2379400,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(10)",
                  "random(23)",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1429800,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62499200,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1566900,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1516100,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3124500,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 108,
        "name": "Create reward transaction system parameter when body is empty",
        "description": "",
        "id": "create-system-parameter-in-reward-transaction;create-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15249500,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2700300,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(10)",
                  "random(10)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1647800,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare body request with value \"{}\"",
            "match": {
              "arguments": [
                {
                  "val": "{}",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 72625700,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1433900,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1220400,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2847100,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 109,
        "name": "Create reward transaction system parameter when body is not valid",
        "description": "",
        "id": "create-system-parameter-in-reward-transaction;create-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14378800,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3472400,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(10)",
                  "random(10)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2387800,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare body request with value \"abc\"",
            "match": {
              "arguments": [
                {
                  "val": "abc",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 64348700,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1636100,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1810400,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 500 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4227400,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "500"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Create system parameter in reward transaction",
    "description": "",
    "id": "create-system-parameter-in-reward-transaction",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/system-parameter-controller/CreateSystemParameter.feature",
    "tags": [
      {
        "name": "@CreateSystemParameterRewardTransactionFeature",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionSystemParameter",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 48
        }
      },
      {
        "name": "@TestSuiteId\u003d13825490",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 82
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Delete reward transaction system parameter in positive scenario",
        "description": "",
        "id": "delete-a-system-parameter-in-reward-transaction;delete-reward-transaction-system-parameter-in-positive-scenario",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16354700,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2816900,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2893300,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2138000,
              "status": "passed"
            },
            "line": 10,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4307700,
              "status": "passed"
            },
            "line": 11,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1988200,
              "status": "passed"
            },
            "line": 14,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 75313900,
              "status": "passed"
            },
            "line": 15,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1341000,
              "status": "passed"
            },
            "line": 16,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1943400,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1767000,
              "status": "passed"
            },
            "line": 18,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3672700,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 60486600,
              "status": "passed"
            },
            "line": 21,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1637500,
              "status": "passed"
            },
            "line": 22,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 896700,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4303700,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2942900,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 66749300,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1406100,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3104600,
              "status": "passed"
            },
            "line": 35,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 63590800,
              "status": "passed"
            },
            "line": 36,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1784000,
              "status": "passed"
            },
            "line": 37,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1828100,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2996400,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@DeleteSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 57,
        "name": "Delete reward transaction system parameter when variable is empty",
        "description": "",
        "id": "delete-a-system-parameter-in-reward-transaction;delete-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15074800,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1384800,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] prepare pathParam for variable with value \"\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58278000,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1413600,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction`] assign previous response data to deleteSystemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "deleteSystemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1562100,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] response statusCode should be 405 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "405",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2685800,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteSystemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027latestResponseData\u0027][\u0027body\u0027][\u0027status\u0027])",
                  "EQUAL",
                  "405"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@DeleteSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 58,
        "name": "Delete reward transaction system parameter when variable is not found",
        "description": "",
        "id": "delete-a-system-parameter-in-reward-transaction;delete-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17383400,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1852200,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] prepare pathParam for variable with value \"random(100)\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "random(100)",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82135600,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1870100,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction`] assign previous response data to deleteSystemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "deleteSystemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1698500,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3402500,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteSystemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteSystemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@DeleteSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Delete a system parameter in reward transaction",
    "description": "",
    "id": "delete-a-system-parameter-in-reward-transaction",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/system-parameter-controller/DeleteSystemParameter.feature",
    "tags": [
      {
        "name": "@DeleteSystemParameterRewardTransactionFeature",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionSystemParameter",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 48
        }
      },
      {
        "name": "@TestSuiteId\u003d13825490",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 82
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Get reward transaction system parameter in positive scenario",
        "description": "",
        "id": "get-system-parameter-in-reward-transaction;get-reward-transaction-system-parameter-in-positive-scenario",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16187900,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1549000,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1597700,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1867300,
              "status": "passed"
            },
            "line": 10,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2645500,
              "status": "passed"
            },
            "line": 11,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1440600,
              "status": "passed"
            },
            "line": 14,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74487300,
              "status": "passed"
            },
            "line": 15,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1656500,
              "status": "passed"
            },
            "line": 16,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1287600,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2082000,
              "status": "passed"
            },
            "line": 18,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2512400,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 63020500,
              "status": "passed"
            },
            "line": 21,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1487200,
              "status": "passed"
            },
            "line": 22,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1186100,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4400800,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3124500,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 61110700,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1653900,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3827300,
              "status": "passed"
            },
            "line": 35,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 55632100,
              "status": "passed"
            },
            "line": 36,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1330400,
              "status": "passed"
            },
            "line": 37,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1502800,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3077300,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@GetSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TesSuiteId\u003d13825490"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 57,
        "name": "Get reward transaction system parameter when variable is empty",
        "description": "",
        "id": "get-system-parameter-in-reward-transaction;get-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13881600,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1694400,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] prepare pathParam for variable with value \"\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 59960300,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2770200,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1283000,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] response statusCode should be 405 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "405",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2687700,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027latestResponseData\u0027][\u0027body\u0027][\u0027status\u0027])",
                  "EQUAL",
                  "405"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@GetSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TesSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 58,
        "name": "Get reward transaction system parameter when variable is not found",
        "description": "",
        "id": "get-system-parameter-in-reward-transaction;get-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 21676700,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7948000,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] prepare pathParam for variable with value \"random(100)\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "random(100)",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 66436300,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1983200,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1898600,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2668400,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@GetSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TesSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Get system parameter in reward transaction",
    "description": "",
    "id": "get-system-parameter-in-reward-transaction",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/system-parameter-controller/GetSystemParameter.feature",
    "tags": [
      {
        "name": "@GetSystemParameterRewardTransactionFeature",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionSystemParameter",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 45
        }
      },
      {
        "name": "@TesSuiteId\u003d13825490",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 79
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Update reward transaction system parameter in positive scenario",
        "description": "",
        "id": "update-system-parameter-in-reward-transaction;update-reward-transaction-system-parameter-in-positive-scenario",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16324900,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1569500,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1625700,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1844600,
              "status": "passed"
            },
            "line": 10,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6502100,
              "status": "passed"
            },
            "line": 11,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2867800,
              "status": "passed"
            },
            "line": 14,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 63549800,
              "status": "passed"
            },
            "line": 15,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1747200,
              "status": "passed"
            },
            "line": 16,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2429300,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2200000,
              "status": "passed"
            },
            "line": 18,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3497900,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 71279800,
              "status": "passed"
            },
            "line": 21,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1409200,
              "status": "passed"
            },
            "line": 22,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1247300,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5229100,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7486800,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] prepare request data updateSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "some new value",
                  "some new description"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3781100,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 98513800,
              "status": "passed"
            },
            "line": 35,
            "name": "[reward-transaction] try PUT request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "PUT",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6839500,
              "status": "passed"
            },
            "line": 36,
            "name": "[reward-transaction] assign previous response data to updateSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1593400,
              "status": "passed"
            },
            "line": 37,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5557400,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] response data \"response($[\u0027updateSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027updateSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3894600,
              "status": "passed"
            },
            "line": 40,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 62727100,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1867600,
              "status": "passed"
            },
            "line": 42,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1931400,
              "status": "passed"
            },
            "line": 43,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6333900,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027updateSystemParamRequest\u0027][\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027updateSystemParamRequest\u0027][\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027updateSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3483100,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 74284400,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1873600,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3383700,
              "status": "passed"
            },
            "line": 55,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 69177300,
              "status": "passed"
            },
            "line": 56,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1860100,
              "status": "passed"
            },
            "line": 57,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1527400,
              "status": "passed"
            },
            "line": 58,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4320500,
              "status": "passed"
            },
            "line": 59,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@UpdateSystemParameterRewardTransaction"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 65,
        "name": "Update non existing system parameter",
        "description": "",
        "id": "update-system-parameter-in-reward-transaction;update-non-existing-system-parameter",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15490200,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3043100,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] prepare request data updateSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(100)",
                  "some new value",
                  "some new description"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1305700,
              "status": "passed"
            },
            "line": 70,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 201953400,
              "status": "passed"
            },
            "line": 71,
            "name": "[reward-transaction] try PUT request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "PUT",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1005900,
              "status": "passed"
            },
            "line": 72,
            "name": "[reward-transaction] assign previous response data to updateSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1078600,
              "status": "passed"
            },
            "line": 73,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2533500,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@UpdateSystemParameterRewardTransaction"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 132,
        "name": "Update reward transaction system parameter when variable is empty",
        "description": "",
        "id": "update-system-parameter-in-reward-transaction;update-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12399800,
              "status": "passed"
            },
            "line": 82,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1401700,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1425000,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1730500,
              "status": "passed"
            },
            "line": 85,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6603000,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1926600,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 178260000,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1243300,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1221800,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2625000,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3043200,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 57579000,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2235500,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1893400,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4497800,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2490300,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data updateSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "",
                  "random(10)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2598600,
              "status": "passed"
            },
            "line": 109,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 57675600,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] try PUT request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "PUT",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3003200,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] assign previous response data to updateSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1977600,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4476400,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3276800,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 273184300,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1883900,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3397700,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 69450800,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1580000,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1554400,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3602000,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@UpdateSystemParameterRewardTransaction"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 133,
        "name": "Update reward transaction system parameter when value is empty",
        "description": "",
        "id": "update-system-parameter-in-reward-transaction;update-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12399500,
              "status": "passed"
            },
            "line": 82,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1937900,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1695300,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1602700,
              "status": "passed"
            },
            "line": 85,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5888200,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2132000,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 75854900,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2187300,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2013800,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2132200,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3007900,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 54517000,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2695700,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1609100,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4899900,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4025500,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data updateSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(10)",
                  "",
                  "random(23)"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 45955500,
              "status": "passed"
            },
            "line": 109,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 67010100,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] try PUT request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "PUT",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1636700,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] assign previous response data to updateSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1342200,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2024500,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2876400,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 65733100,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1322400,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2186900,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 61456000,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1432700,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1329100,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1737500,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@UpdateSystemParameterRewardTransaction"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 134,
        "name": "Update reward transaction system parameter when description is empty",
        "description": "",
        "id": "update-system-parameter-in-reward-transaction;update-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10508400,
              "status": "passed"
            },
            "line": 82,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1221000,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1126500,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1420900,
              "status": "passed"
            },
            "line": 85,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6648600,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1875000,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 67772100,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1580700,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1175100,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1212500,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2702800,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 60595300,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1559000,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1290900,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4981100,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3222800,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data updateSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(10)",
                  "random(23)",
                  ""
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2946800,
              "status": "passed"
            },
            "line": 109,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 52221200,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] try PUT request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "PUT",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1321000,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] assign previous response data to updateSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1091400,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2213600,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2372300,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 53477500,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1335900,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2820900,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 55706900,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1857500,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1334300,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2838100,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@UpdateSystemParameterRewardTransaction"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 135,
        "name": "Update reward transaction system parameter when body is empty",
        "description": "",
        "id": "update-system-parameter-in-reward-transaction;update-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11648500,
              "status": "passed"
            },
            "line": 82,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1825200,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1594500,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1802000,
              "status": "passed"
            },
            "line": 85,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4832800,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1991800,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91437700,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1564600,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1367200,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1381900,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2833100,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 77132200,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1782100,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1181200,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3448000,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2368300,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data updateSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(10)",
                  "random(10)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2834800,
              "status": "passed"
            },
            "line": 109,
            "name": "[reward-transaction] prepare body request with value \"{}\"",
            "match": {
              "arguments": [
                {
                  "val": "{}",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 87158200,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] try PUT request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "PUT",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1803300,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] assign previous response data to updateSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1679600,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3727900,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3126900,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 72477700,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1072400,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2126600,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1170491500,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1955500,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1322700,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2299000,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@UpdateSystemParameterRewardTransaction"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 136,
        "name": "Update reward transaction system parameter when body is not valid",
        "description": "",
        "id": "update-system-parameter-in-reward-transaction;update-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15377500,
              "status": "passed"
            },
            "line": 82,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1325500,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1097100,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1113000,
              "status": "passed"
            },
            "line": 85,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3530900,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1344800,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74012000,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 843800,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 617300,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1007300,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2143300,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 55214700,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1807100,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 907500,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4235200,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4164200,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data updateSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(10)",
                  "random(10)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2307700,
              "status": "passed"
            },
            "line": 109,
            "name": "[reward-transaction] prepare body request with value \"abc\"",
            "match": {
              "arguments": [
                {
                  "val": "abc",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 58551700,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] try PUT request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "PUT",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1417300,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] assign previous response data to updateSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1178400,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] response statusCode should be 500 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2668200,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "500"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1502400,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 56353800,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1139300,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3333100,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 54558600,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1535200,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1342100,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3658000,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@UpdateSystemParameterRewardTransaction"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Update system parameter in reward transaction",
    "description": "",
    "id": "update-system-parameter-in-reward-transaction",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/system-parameter-controller/UpdateSystemParameter.feature",
    "tags": [
      {
        "name": "@UpdateSystemParameterRewardTransaction",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionSystemParameter",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 41
        }
      },
      {
        "name": "@TestSuiteId\u003d13825490",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 75
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "User still eligible to redeem reward with no rule applied",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-reward-with-no-rule-applied",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12151500,
              "status": "passed"
            },
            "line": 6,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2035400,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2508600,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1782600,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 406166200,
              "status": "passed"
            },
            "line": 10,
            "name": "[reward-transaction] create \"3\" redemption history in the previous \"1\" to \"7\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"7\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7954500,
              "status": "passed"
            },
            "line": 11,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1750000,
              "status": "passed"
            },
            "line": 14,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 144887200,
              "status": "passed"
            },
            "line": 15,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6985900,
              "status": "passed"
            },
            "line": 16,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1658200,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5465400,
              "status": "passed"
            },
            "line": 18,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 96,
        "name": "User still eligible to redeem before reaching global limit for logon id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 18298200,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1756900,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1769200,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1533400,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1933900,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1849400,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 5862400,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3909400,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2225300,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 77672800,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1827200,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1137500,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1298800,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3432300,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 57381800,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1828400,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1932900,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4788000,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 399355200,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"2\" redemption history in the previous \"1\" to \"7\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"7\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6381900,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2373100,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 179017900,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2087500,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1703000,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3575200,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 347296600,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 299936200,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 97,
        "name": "User still eligible to redeem before reaching global limit for device id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16091500,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1830300,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2042300,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2194700,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1652100,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1656200,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2930700,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2971500,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2285700,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 137884700,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1770800,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1962900,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2618500,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2827300,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 57791500,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2261000,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1380700,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4627800,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 343297300,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"2\" redemption history in the previous \"1\" to \"7\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"7\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6213800,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2250900,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74252400,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1930300,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1516000,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3045700,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 805360900,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 338289400,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 98,
        "name": "User still eligible to redeem before reaching period limit for logon id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11675500,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1441300,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1311700,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2317200,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1526000,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1353700,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 2493100,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "30",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3674600,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1146900,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94081600,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 868400,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 760200,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1905600,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3122000,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 70804300,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1182500,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1082900,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3463000,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 314820000,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"2\" redemption history in the previous \"1\" to \"7\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"7\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4514900,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3035500,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 532681400,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1281800,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1133000,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2586700,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 322716500,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 371337200,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 99,
        "name": "User still eligible to redeem before reaching period limit for logon id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9902100,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1546600,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1761300,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1576600,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1678900,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1580400,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 1781600,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "30",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3852200,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1613300,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 75652400,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1519200,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1302400,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2020500,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3168400,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 64873300,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1368600,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1110200,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2844500,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 339314100,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"4\" redemption history in the previous \"7\" to \"14\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"4\"",
                  "offset": 28
                },
                {
                  "val": "\"7\"",
                  "offset": 67
                },
                {
                  "val": "\"14\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8544500,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6206900,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 180479400,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1383900,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1137800,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2619100,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 326043200,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 368800800,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 100,
        "name": "User still eligible to redeem before reaching period limit for device id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13227800,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1768800,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2192400,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1423700,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2263300,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2462300,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 4500900,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "30",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4488200,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1550100,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 92920800,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1808900,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1163300,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1884000,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2579500,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 62589000,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1632600,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1558700,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3294300,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 378619000,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"2\" redemption history in the previous \"1\" to \"7\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"7\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4240100,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3103500,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 209762600,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1507500,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1314800,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3655100,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 302853900,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 335845500,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 101,
        "name": "User still eligible to redeem before reaching period limit for device id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13203100,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1561200,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1389200,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1014700,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1055900,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1150800,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3271200,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "30",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3734100,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1339900,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 65978200,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1170300,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 845300,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 948200,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3162400,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 63029700,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 933800,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1255400,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3018200,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 340029800,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"4\" redemption history in the previous \"7\" to \"14\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"4\"",
                  "offset": 28
                },
                {
                  "val": "\"7\"",
                  "offset": 67
                },
                {
                  "val": "\"14\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5870100,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4795600,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 167473000,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1252500,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1151900,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1205900,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 565874800,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 398803800,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 102,
        "name": "User still eligible to redeem before reaching no limit for device id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14355300,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1057900,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1174700,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1144600,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1489400,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2740200,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 4193700,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3025700,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1826100,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 67946700,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1933700,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1366600,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1235000,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1572100,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 63062700,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1461400,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1136000,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2891500,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 416583400,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"4\" redemption history in the previous \"7\" to \"14\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"4\"",
                  "offset": 28
                },
                {
                  "val": "\"7\"",
                  "offset": 67
                },
                {
                  "val": "\"14\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5090400,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3280900,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 120464000,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1901800,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1546600,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2551400,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 454878000,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 287990400,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 103,
        "name": "User still eligible to redeem before reaching no limit for logon id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 23513600,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1441600,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1466500,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1453300,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2730500,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2281400,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 3915700,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7676400,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2002700,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 155805600,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1447500,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1311000,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1430600,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1805100,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 97386800,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1059500,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 743400,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4682300,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 469053100,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"4\" redemption history in the previous \"7\" to \"14\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"4\"",
                  "offset": 28
                },
                {
                  "val": "\"7\"",
                  "offset": 67
                },
                {
                  "val": "\"14\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8510100,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5066600,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89803200,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1918100,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1202800,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4446600,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 305764100,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 344238400,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 104,
        "name": "User still eligible to redeem before reaching global limit for no validation",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10255800,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1680100,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1792400,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2525900,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1960100,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 2003000,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 6464600,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5724100,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1386500,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 65734500,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1973500,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1373000,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1622000,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2992800,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 55802800,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2205300,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1599000,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4197100,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 516197400,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"4\" redemption history in the previous \"7\" to \"14\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"4\"",
                  "offset": 28
                },
                {
                  "val": "\"7\"",
                  "offset": 67
                },
                {
                  "val": "\"14\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4618000,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3297900,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 63307200,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1331500,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1287300,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2424200,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 441791700,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 471049800,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 105,
        "name": "User still eligible to redeem before reaching period limit for no validation",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;11",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12401200,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1662600,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2974300,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13105400,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3746800,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 3593500,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 4622800,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3226300,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1996100,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 157976900,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1290600,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1076600,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1424900,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3564100,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 90048900,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1183600,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1208100,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5248200,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 393920800,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"4\" redemption history in the previous \"7\" to \"14\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"4\"",
                  "offset": 28
                },
                {
                  "val": "\"7\"",
                  "offset": 67
                },
                {
                  "val": "\"14\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4826700,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2417000,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 66088400,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1549800,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1204800,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2442000,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 564273400,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 709204400,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 106,
        "name": "User still eligible to redeem before reaching no limit for no validation",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;12",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13711700,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2084400,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2474000,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9024500,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1576400,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 108621100,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 4625300,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8524900,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2558200,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 116037500,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1749300,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1321200,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1486600,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3305300,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 90524400,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1652600,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1031100,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2884000,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 865834900,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"4\" redemption history in the previous \"7\" to \"14\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"4\"",
                  "offset": 28
                },
                {
                  "val": "\"7\"",
                  "offset": 67
                },
                {
                  "val": "\"14\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6626200,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2231000,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 67703200,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6574900,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1844600,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1867000,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2095599700,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 359863100,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 184,
        "name": "User not eligible to redeem when reached global limit for logon id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-not-eligible-to-redeem-when-reached-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12683600,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1421700,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1384300,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1576500,
              "status": "passed"
            },
            "line": 114,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1368400,
              "status": "passed"
            },
            "line": 115,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 116,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2886600,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 120,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2897300,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2755800,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1786700,
              "status": "passed"
            },
            "line": 129,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 123213400,
              "status": "passed"
            },
            "line": 130,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1307500,
              "status": "passed"
            },
            "line": 131,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1148900,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1554900,
              "status": "passed"
            },
            "line": 133,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2286600,
              "status": "passed"
            },
            "line": 135,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 80986600,
              "status": "passed"
            },
            "line": 136,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1277100,
              "status": "passed"
            },
            "line": 137,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1171700,
              "status": "passed"
            },
            "line": 138,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3346300,
              "status": "passed"
            },
            "line": 139,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 371885500,
              "status": "passed"
            },
            "line": 145,
            "name": "[reward-transaction] create \"3\" redemption history in the previous \"1\" to \"6\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"6\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4299200,
              "status": "passed"
            },
            "line": 147,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8351300,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 102137000,
              "status": "passed"
            },
            "line": 151,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1295400,
              "status": "passed"
            },
            "line": 152,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1141300,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3130100,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027message\u0027])",
                  "EQUAL",
                  "Reach Max Limit"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027][\u0027LOGON_ID\u0027][0])",
                  "EQUAL",
                  "REACH_MAX_LIMIT"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 406187400,
              "status": "passed"
            },
            "line": 162,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 163,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 383658600,
              "status": "passed"
            },
            "line": 172,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 173,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 185,
        "name": "User not eligible to redeem when reached global and period limit for logon id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-not-eligible-to-redeem-when-reached-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11907100,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1547800,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1327100,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1320500,
              "status": "passed"
            },
            "line": 114,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1403500,
              "status": "passed"
            },
            "line": 115,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 116,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1802000,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 120,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 4117900,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3688300,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1486400,
              "status": "passed"
            },
            "line": 129,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 147102800,
              "status": "passed"
            },
            "line": 130,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1770600,
              "status": "passed"
            },
            "line": 131,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1492100,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1566600,
              "status": "passed"
            },
            "line": 133,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2660600,
              "status": "passed"
            },
            "line": 135,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 70039000,
              "status": "passed"
            },
            "line": 136,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1273000,
              "status": "passed"
            },
            "line": 137,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1309300,
              "status": "passed"
            },
            "line": 138,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3346100,
              "status": "passed"
            },
            "line": 139,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 575192100,
              "status": "passed"
            },
            "line": 145,
            "name": "[reward-transaction] create \"3\" redemption history in the previous \"1\" to \"6\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"6\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3796000,
              "status": "passed"
            },
            "line": 147,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1862500,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 137736300,
              "status": "passed"
            },
            "line": 151,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2011500,
              "status": "passed"
            },
            "line": 152,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1155200,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3277100,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027message\u0027])",
                  "EQUAL",
                  "Reach Max Limit"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027][\u0027LOGON_ID\u0027][0])",
                  "EQUAL",
                  "REACH_MAX_LIMIT"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 413768200,
              "status": "passed"
            },
            "line": 162,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 163,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 624394100,
              "status": "passed"
            },
            "line": 172,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 173,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 186,
        "name": "User not eligible to redeem when reached global and period limit for device id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-not-eligible-to-redeem-when-reached-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10942400,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1266800,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1293700,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1507000,
              "status": "passed"
            },
            "line": 114,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1136200,
              "status": "passed"
            },
            "line": 115,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 116,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2056000,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 120,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 2842800,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3241300,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1345500,
              "status": "passed"
            },
            "line": 129,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 120364200,
              "status": "passed"
            },
            "line": 130,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1985800,
              "status": "passed"
            },
            "line": 131,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1348100,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1587200,
              "status": "passed"
            },
            "line": 133,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2384900,
              "status": "passed"
            },
            "line": 135,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 209503500,
              "status": "passed"
            },
            "line": 136,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1041400,
              "status": "passed"
            },
            "line": 137,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 947000,
              "status": "passed"
            },
            "line": 138,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14903500,
              "status": "passed"
            },
            "line": 139,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1298507200,
              "status": "passed"
            },
            "line": 145,
            "name": "[reward-transaction] create \"3\" redemption history in the previous \"1\" to \"6\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"6\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3547500,
              "status": "passed"
            },
            "line": 147,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1872800,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 125989200,
              "status": "passed"
            },
            "line": 151,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1362300,
              "status": "passed"
            },
            "line": 152,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1188600,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3832200,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027message\u0027])",
                  "EQUAL",
                  "Reach Max Limit"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027][\u0027DEVICE_ID\u0027][0])",
                  "EQUAL",
                  "REACH_MAX_LIMIT"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 672201600,
              "status": "passed"
            },
            "line": 162,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 163,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 344693900,
              "status": "passed"
            },
            "line": 172,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 173,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 187,
        "name": "User not eligible to redeem when reached global and period limit for logon and device id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-not-eligible-to-redeem-when-reached-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12963400,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1670500,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1093500,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2183900,
              "status": "passed"
            },
            "line": 114,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1737600,
              "status": "passed"
            },
            "line": 115,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 116,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1621000,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 120,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 4553500,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5844700,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1759500,
              "status": "passed"
            },
            "line": 129,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 125583500,
              "status": "passed"
            },
            "line": 130,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1620800,
              "status": "passed"
            },
            "line": 131,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1563200,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1282500,
              "status": "passed"
            },
            "line": 133,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2192100,
              "status": "passed"
            },
            "line": 135,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 63210700,
              "status": "passed"
            },
            "line": 136,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1386500,
              "status": "passed"
            },
            "line": 137,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1252700,
              "status": "passed"
            },
            "line": 138,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4690100,
              "status": "passed"
            },
            "line": 139,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 463238200,
              "status": "passed"
            },
            "line": 145,
            "name": "[reward-transaction] create \"3\" redemption history in the previous \"1\" to \"6\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"6\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6865700,
              "status": "passed"
            },
            "line": 147,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2711100,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 244370600,
              "status": "passed"
            },
            "line": 151,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3047700,
              "status": "passed"
            },
            "line": 152,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1408000,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5253000,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027message\u0027])",
                  "EQUAL",
                  "Reach Max Limit"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027][\u0027LOGON_ID\u0027][0])",
                  "EQUAL",
                  "REACH_MAX_LIMIT"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 360459800,
              "status": "passed"
            },
            "line": 162,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 163,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 604165100,
              "status": "passed"
            },
            "line": 172,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 173,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 188,
        "name": "User not eligible to redeem when reached global limit for device id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-not-eligible-to-redeem-when-reached-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11733900,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1768300,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1308000,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2536700,
              "status": "passed"
            },
            "line": 114,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1855500,
              "status": "passed"
            },
            "line": 115,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 116,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1808400,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 120,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 3174200,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4551400,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2526000,
              "status": "passed"
            },
            "line": 129,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 150189500,
              "status": "passed"
            },
            "line": 130,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1783100,
              "status": "passed"
            },
            "line": 131,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1148700,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1918800,
              "status": "passed"
            },
            "line": 133,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3471800,
              "status": "passed"
            },
            "line": 135,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 66910200,
              "status": "passed"
            },
            "line": 136,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1900400,
              "status": "passed"
            },
            "line": 137,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1673000,
              "status": "passed"
            },
            "line": 138,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3089800,
              "status": "passed"
            },
            "line": 139,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 442215300,
              "status": "passed"
            },
            "line": 145,
            "name": "[reward-transaction] create \"3\" redemption history in the previous \"1\" to \"6\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"6\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5108000,
              "status": "passed"
            },
            "line": 147,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3627700,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 163898300,
              "status": "passed"
            },
            "line": 151,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1438800,
              "status": "passed"
            },
            "line": 152,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1168000,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3509200,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027message\u0027])",
                  "EQUAL",
                  "Reach Max Limit"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027][\u0027DEVICE_ID\u0027][0])",
                  "EQUAL",
                  "REACH_MAX_LIMIT"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 414513000,
              "status": "passed"
            },
            "line": 162,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 163,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 413247500,
              "status": "passed"
            },
            "line": 172,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 173,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 189,
        "name": "User not eligible to redeem when reached period limit for logon id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-not-eligible-to-redeem-when-reached-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16069300,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2334500,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2987100,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1393200,
              "status": "passed"
            },
            "line": 114,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1500100,
              "status": "passed"
            },
            "line": 115,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 116,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 3768900,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 120,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 6945700,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "30",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3093800,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2239400,
              "status": "passed"
            },
            "line": 129,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 173647800,
              "status": "passed"
            },
            "line": 130,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1338900,
              "status": "passed"
            },
            "line": 131,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1198100,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1941300,
              "status": "passed"
            },
            "line": 133,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2925900,
              "status": "passed"
            },
            "line": 135,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 103720700,
              "status": "passed"
            },
            "line": 136,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2353100,
              "status": "passed"
            },
            "line": 137,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1431300,
              "status": "passed"
            },
            "line": 138,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3290500,
              "status": "passed"
            },
            "line": 139,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 609763100,
              "status": "passed"
            },
            "line": 145,
            "name": "[reward-transaction] create \"3\" redemption history in the previous \"1\" to \"6\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"6\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3785800,
              "status": "passed"
            },
            "line": 147,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2756200,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 70498800,
              "status": "passed"
            },
            "line": 151,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1282000,
              "status": "passed"
            },
            "line": 152,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1239400,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3459400,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027message\u0027])",
                  "EQUAL",
                  "Reach Time Range Limit"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027][\u0027LOGON_ID\u0027][0])",
                  "EQUAL",
                  "REACH_TIME_RANGE_LIMIT"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 523609200,
              "status": "passed"
            },
            "line": 162,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 163,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 563262200,
              "status": "passed"
            },
            "line": 172,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 173,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 190,
        "name": "User not eligible to redeem when reached period limit for device id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-not-eligible-to-redeem-when-reached-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13818800,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1429300,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1662900,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1753400,
              "status": "passed"
            },
            "line": 114,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1690300,
              "status": "passed"
            },
            "line": 115,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 116,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2349600,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 120,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3501700,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "30",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3056700,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1354600,
              "status": "passed"
            },
            "line": 129,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 163332600,
              "status": "passed"
            },
            "line": 130,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1270300,
              "status": "passed"
            },
            "line": 131,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1062400,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1457400,
              "status": "passed"
            },
            "line": 133,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2606000,
              "status": "passed"
            },
            "line": 135,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 76627100,
              "status": "passed"
            },
            "line": 136,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1983200,
              "status": "passed"
            },
            "line": 137,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1209700,
              "status": "passed"
            },
            "line": 138,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3330600,
              "status": "passed"
            },
            "line": 139,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 786068200,
              "status": "passed"
            },
            "line": 145,
            "name": "[reward-transaction] create \"3\" redemption history in the previous \"1\" to \"6\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"6\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3055500,
              "status": "passed"
            },
            "line": 147,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1309300,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94971800,
              "status": "passed"
            },
            "line": 151,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 791800,
              "status": "passed"
            },
            "line": 152,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 953500,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2177900,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027message\u0027])",
                  "EQUAL",
                  "Reach Time Range Limit"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027][\u0027DEVICE_ID\u0027][0])",
                  "EQUAL",
                  "REACH_TIME_RANGE_LIMIT"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 412102200,
              "status": "passed"
            },
            "line": 162,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 163,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 432378200,
              "status": "passed"
            },
            "line": 172,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 173,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 208,
        "name": "Check redemption eligibility when logonId is empty",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;check-redemption-eligibility-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12557400,
              "status": "passed"
            },
            "line": 194,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1995600,
              "status": "passed"
            },
            "line": 195,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "random(23)",
                  "",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1311400,
              "status": "passed"
            },
            "line": 198,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83174300,
              "status": "passed"
            },
            "line": 199,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1440200,
              "status": "passed"
            },
            "line": 200,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1379400,
              "status": "passed"
            },
            "line": 201,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3502300,
              "status": "passed"
            },
            "line": 202,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 209,
        "name": "Check redemption eligibility when deviceId is empty",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;check-redemption-eligibility-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11503400,
              "status": "passed"
            },
            "line": 194,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2049100,
              "status": "passed"
            },
            "line": 195,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "random(23)",
                  "random(23)",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2453700,
              "status": "passed"
            },
            "line": 198,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 102694500,
              "status": "passed"
            },
            "line": 199,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1193200,
              "status": "passed"
            },
            "line": 200,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1731500,
              "status": "passed"
            },
            "line": 201,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2503400,
              "status": "passed"
            },
            "line": 202,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "200"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 210,
        "name": "Check redemption eligibility when voucherSku is empty",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;check-redemption-eligibility-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16254600,
              "status": "passed"
            },
            "line": 194,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1786800,
              "status": "passed"
            },
            "line": 195,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "",
                  "random(23)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1298900,
              "status": "passed"
            },
            "line": 198,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 67070900,
              "status": "passed"
            },
            "line": 199,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1421400,
              "status": "passed"
            },
            "line": 200,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1105900,
              "status": "passed"
            },
            "line": 201,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2745000,
              "status": "passed"
            },
            "line": 202,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 211,
        "name": "Check redemption eligibility when body is empty",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;check-redemption-eligibility-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11566100,
              "status": "passed"
            },
            "line": 194,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1840700,
              "status": "passed"
            },
            "line": 195,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "",
                  "",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1230400,
              "status": "passed"
            },
            "line": 198,
            "name": "[reward-transaction] prepare body request with value \"{}\"",
            "match": {
              "arguments": [
                {
                  "val": "{}",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83986700,
              "status": "passed"
            },
            "line": 199,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1343400,
              "status": "passed"
            },
            "line": 200,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 997400,
              "status": "passed"
            },
            "line": 201,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2750900,
              "status": "passed"
            },
            "line": 202,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 212,
        "name": "Check redemption eligibility when body is not valid",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;check-redemption-eligibility-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12433600,
              "status": "passed"
            },
            "line": 194,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2067000,
              "status": "passed"
            },
            "line": 195,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "",
                  "",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1759500,
              "status": "passed"
            },
            "line": 198,
            "name": "[reward-transaction] prepare body request with value \"abc\"",
            "match": {
              "arguments": [
                {
                  "val": "abc",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 66509000,
              "status": "passed"
            },
            "line": 199,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2222700,
              "status": "passed"
            },
            "line": 200,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1271800,
              "status": "passed"
            },
            "line": 201,
            "name": "[reward-transaction] response statusCode should be 500 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2360000,
              "status": "passed"
            },
            "line": 202,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "500"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Check redemption eligibility in reward transaction",
    "description": "",
    "id": "check-redemption-eligibility-in-reward-transaction",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/validation-controller/RedemptionEligibility.feature",
    "tags": [
      {
        "name": "@RedemptionEligibilityFeature",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionValidation",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 31
        }
      },
      {
        "name": "@TestSuiteId\u003d13825489",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 60
        }
      }
    ]
  }
]