[
  {
    "line": 2,
    "elements": [
      {
        "line": 72,
        "name": "Create a redemption history with logonId",
        "description": "",
        "id": "create-reward-transaction-history;create-a-redemption-history-\u003ccondition\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7919688700,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 597242000,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14502400,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data deviceId with value \"\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2359100,
              "status": "passed"
            },
            "line": 10,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1955100,
              "status": "passed"
            },
            "line": 11,
            "name": "[reward-transaction] prepare request data transactionId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "transactionId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 68
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 199479600,
              "status": "passed"
            },
            "line": 12,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027transactionId\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3788400,
              "status": "passed"
            },
            "line": 15,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRewardHistoryRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRewardHistoryRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2364456900,
              "status": "passed"
            },
            "line": 16,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 36273400,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40728100,
              "status": "passed"
            },
            "line": 18,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 50112200,
              "status": "passed"
            },
            "line": 19,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027logonId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027logonId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027deviceId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027deviceId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027transactionId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027transactionId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1908985500,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 28,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_history),\n    find(({\n      transactionId: \u0027,request($[\u0027transactionId\u0027]),\u0027\n    })),\n    limit(1)\n  )"
            }
          },
          {
            "result": {
              "duration": 25136700,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027transactionId\u0027])",
                  "EQUAL",
                  "request($[\u0027transactionId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027logonId\u0027])",
                  "EQUAL",
                  "request($[\u0027logonId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027deviceId\u0027])",
                  "EQUAL",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 267242000,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] try DELETE request to \"/redemption/_history\" with parameter",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithParameter(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "key",
                  "value"
                ]
              },
              {
                "cells": [
                  "transactionId",
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027transactionId\u0027])"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3350500,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign previous response data to deleteRewardHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "deleteRewardHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1787500,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5516000,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 653179000,
              "status": "passed"
            },
            "line": 56,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 57,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_history),\n    find(({\n      transactionId: \u0027,request($[\u0027transactionId\u0027]),\u0027\n    })),\n    limit(1)\n  )"
            }
          },
          {
            "result": {
              "duration": 9350200,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 73,
        "name": "Create a redemption history with logonId and deviceId",
        "description": "",
        "id": "create-reward-transaction-history;create-a-redemption-history-\u003ccondition\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 29167100,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2452800,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3037800,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2309500,
              "status": "passed"
            },
            "line": 10,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1730600,
              "status": "passed"
            },
            "line": 11,
            "name": "[reward-transaction] prepare request data transactionId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "transactionId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 68
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15632200,
              "status": "passed"
            },
            "line": 12,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027transactionId\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3123500,
              "status": "passed"
            },
            "line": 15,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRewardHistoryRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRewardHistoryRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 211646500,
              "status": "passed"
            },
            "line": 16,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1816600,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1605900,
              "status": "passed"
            },
            "line": 18,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8326000,
              "status": "passed"
            },
            "line": 19,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027logonId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027logonId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027deviceId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027deviceId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027transactionId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027transactionId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 887355200,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 28,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_history),\n    find(({\n      transactionId: \u0027,request($[\u0027transactionId\u0027]),\u0027\n    })),\n    limit(1)\n  )"
            }
          },
          {
            "result": {
              "duration": 9961000,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027transactionId\u0027])",
                  "EQUAL",
                  "request($[\u0027transactionId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027logonId\u0027])",
                  "EQUAL",
                  "request($[\u0027logonId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027deviceId\u0027])",
                  "EQUAL",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 174809100,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] try DELETE request to \"/redemption/_history\" with parameter",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithParameter(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "key",
                  "value"
                ]
              },
              {
                "cells": [
                  "transactionId",
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027transactionId\u0027])"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1640800,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign previous response data to deleteRewardHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "deleteRewardHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1072800,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3421900,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1190258900,
              "status": "passed"
            },
            "line": 56,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 57,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_history),\n    find(({\n      transactionId: \u0027,request($[\u0027transactionId\u0027]),\u0027\n    })),\n    limit(1)\n  )"
            }
          },
          {
            "result": {
              "duration": 3184300,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 76,
        "name": "Redemption history should be unique per transaction id",
        "description": "",
        "id": "create-reward-transaction-history;redemption-history-should-be-unique-per-transaction-id",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19175900,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2049900,
              "status": "passed"
            },
            "line": 79,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1861100,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2620900,
              "status": "passed"
            },
            "line": 81,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3634800,
              "status": "passed"
            },
            "line": 82,
            "name": "[reward-transaction] prepare request data transactionId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "transactionId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 68
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20138800,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027transactionId\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3511700,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRewardHistoryRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRewardHistoryRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 175046700,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2552900,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1570500,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7351200,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027logonId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027logonId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027deviceId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027deviceId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027transactionId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027transactionId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 524310600,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 99,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_history),\n    find(({\n      transactionId: \u0027,request($[\u0027transactionId\u0027]),\u0027\n    })),\n    limit(1)\n  )"
            }
          },
          {
            "result": {
              "duration": 9694800,
              "status": "passed"
            },
            "line": 109,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027transactionId\u0027])",
                  "EQUAL",
                  "request($[\u0027transactionId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027logonId\u0027])",
                  "EQUAL",
                  "request($[\u0027logonId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027deviceId\u0027])",
                  "EQUAL",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4087900,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRewardHistoryRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRewardHistoryRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 181983500,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2110900,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1633800,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response statusCode should be 500 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 119904700,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] try DELETE request to \"/redemption/_history\" with parameter",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithParameter(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "key",
                  "value"
                ]
              },
              {
                "cells": [
                  "transactionId",
                  "request($[\u0027transactionId\u0027])"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1552100,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] assign previous response data to deleteRewardHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "deleteRewardHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1512600,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4523000,
              "status": "passed"
            },
            "line": 127,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 807907700,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_history),\n    find(({\n      transactionId: \u0027,request($[\u0027transactionId\u0027]),\u0027\n    })),\n    limit(1)\n  )"
            }
          },
          {
            "result": {
              "duration": 1974400,
              "status": "passed"
            },
            "line": 143,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 163,
        "name": "Create redemption history when voucherSku is empty",
        "description": "",
        "id": "create-reward-transaction-history;create-redemption-history-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 18653200,
              "status": "passed"
            },
            "line": 149,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9854400,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "",
                  "random(23)",
                  "(test_,random(10,NUMERIC),@test.com)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2304000,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRewardHistoryRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRewardHistoryRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 176320400,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1504600,
              "status": "passed"
            },
            "line": 155,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1463100,
              "status": "passed"
            },
            "line": 156,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5021000,
              "status": "passed"
            },
            "line": 157,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 164,
        "name": "Create redemption history when transactionId is empty",
        "description": "",
        "id": "create-reward-transaction-history;create-redemption-history-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16898700,
              "status": "passed"
            },
            "line": 149,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3815700,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "random(23)",
                  "",
                  "(test_,random(10,NUMERIC),@test.com)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4042500,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRewardHistoryRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRewardHistoryRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 122367300,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1709600,
              "status": "passed"
            },
            "line": 155,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2132800,
              "status": "passed"
            },
            "line": 156,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4193900,
              "status": "passed"
            },
            "line": 157,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 165,
        "name": "Create redemption history when logonId is empty",
        "description": "",
        "id": "create-reward-transaction-history;create-redemption-history-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16936500,
              "status": "passed"
            },
            "line": 149,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4164400,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "random(23)",
                  "random(23)",
                  "",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1765000,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRewardHistoryRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRewardHistoryRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 107649000,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2036500,
              "status": "passed"
            },
            "line": 155,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1403600,
              "status": "passed"
            },
            "line": 156,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3563800,
              "status": "passed"
            },
            "line": 157,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 166,
        "name": "Create redemption history when body is empty",
        "description": "",
        "id": "create-reward-transaction-history;create-redemption-history-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17778300,
              "status": "passed"
            },
            "line": 149,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2400000,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "",
                  "",
                  "",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1436400,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] prepare body request with value \"{}\"",
            "match": {
              "arguments": [
                {
                  "val": "{}",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 134159700,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1553600,
              "status": "passed"
            },
            "line": 155,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1581600,
              "status": "passed"
            },
            "line": 156,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4244800,
              "status": "passed"
            },
            "line": 157,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 167,
        "name": "Create redemption history when body is not valid",
        "description": "",
        "id": "create-reward-transaction-history;create-redemption-history-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12074400,
              "status": "passed"
            },
            "line": 149,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2654200,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "",
                  "",
                  "",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2955800,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] prepare body request with value \"abc\"",
            "match": {
              "arguments": [
                {
                  "val": "abc",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 108059500,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2075700,
              "status": "passed"
            },
            "line": 155,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1874300,
              "status": "passed"
            },
            "line": 156,
            "name": "[reward-transaction] response statusCode should be 500 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4751300,
              "status": "passed"
            },
            "line": 157,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "500"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Create reward transaction history",
    "description": "",
    "id": "create-reward-transaction-history",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/history-controller/CreateRedemptionHistory.feature",
    "tags": [
      {
        "name": "@CreateRedemptionHistoryFeature",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionHistory",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 33
        }
      },
      {
        "name": "@TestSuiteId\u003d13825488",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 59
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Delete redemption history in reward transaction",
        "description": "",
        "id": "delete-redemption-history-in-reward-transaction;delete-redemption-history-in-reward-transaction",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15829400,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1909600,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2140900,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2268300,
              "status": "passed"
            },
            "line": 10,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2243300,
              "status": "passed"
            },
            "line": 11,
            "name": "[reward-transaction] prepare request data transactionId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "transactionId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 68
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26748100,
              "status": "passed"
            },
            "line": 12,
            "name": "[reward-transaction] prepare request data createRewardHistoryRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRewardHistoryRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "transactionId",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027transactionId\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3074800,
              "status": "passed"
            },
            "line": 15,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRewardHistoryRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRewardHistoryRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 183958400,
              "status": "passed"
            },
            "line": 16,
            "name": "[reward-transaction] try POST request to \"/redemption/_history\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1514900,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] assign previous response data to createHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "createHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2118300,
              "status": "passed"
            },
            "line": 18,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5581800,
              "status": "passed"
            },
            "line": 19,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027logonId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027logonId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027deviceId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027deviceId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027transactionId\u0027])",
                  "EQUAL",
                  "request($[\u0027createRewardHistoryRequest\u0027][\u0027transactionId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1462689400,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 28,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_history),\n    find(({\n      transactionId: \u0027,request($[\u0027transactionId\u0027]),\u0027\n    })),\n    limit(1)\n  )"
            }
          },
          {
            "result": {
              "duration": 4064600,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027transactionId\u0027])",
                  "EQUAL",
                  "request($[\u0027transactionId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027logonId\u0027])",
                  "EQUAL",
                  "request($[\u0027logonId\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027][0][\u0027deviceId\u0027])",
                  "EQUAL",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 231820100,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] try DELETE request to \"/redemption/_history\" with parameter",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithParameter(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "key",
                  "value"
                ]
              },
              {
                "cells": [
                  "transactionId",
                  "response($[\u0027createHistoryResponse\u0027][\u0027value\u0027][\u0027transactionId\u0027])"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1391500,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign previous response data to deleteRewardHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "deleteRewardHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 913100,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1647100,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 474507100,
              "status": "passed"
            },
            "line": 56,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 57,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_history),\n    find(({\n      transactionId: \u0027,request($[\u0027transactionId\u0027]),\u0027\n    })),\n    limit(1)\n  )"
            }
          },
          {
            "result": {
              "duration": 2307200,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027dbResponse\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@DeleteRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 85,
        "name": "Delete redemption history when voucherSku is empty",
        "description": "",
        "id": "delete-redemption-history-in-reward-transaction;delete-redemption-history-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14764400,
              "status": "passed"
            },
            "line": 73,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 109383200,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] try DELETE request to \"/redemption/_history\" with parameter",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithParameter(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "key",
                  "value"
                ]
              },
              {
                "cells": [
                  "transactionId",
                  ""
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1576800,
              "status": "passed"
            },
            "line": 77,
            "name": "[reward-transaction] assign previous response data to deleteRewardHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "deleteRewardHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1634400,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3946300,
              "status": "passed"
            },
            "line": 79,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@DeleteRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 86,
        "name": "Delete redemption history when voucherSku is not found",
        "description": "",
        "id": "delete-redemption-history-in-reward-transaction;delete-redemption-history-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 20188400,
              "status": "passed"
            },
            "line": 73,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 309626500,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] try DELETE request to \"/redemption/_history\" with parameter",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "/redemption/_history",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithParameter(String,String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "key",
                  "value"
                ]
              },
              {
                "cells": [
                  "transactionId",
                  "random(100)"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2496300,
              "status": "passed"
            },
            "line": 77,
            "name": "[reward-transaction] assign previous response data to deleteRewardHistoryResponse",
            "match": {
              "arguments": [
                {
                  "val": "deleteRewardHistoryResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1646700,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3473700,
              "status": "passed"
            },
            "line": 79,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteRewardHistoryResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@DeleteRedemptionHistoryFeature"
          },
          {
            "name": "@RewardTransactionHistory"
          },
          {
            "name": "@TestSuiteId\u003d13825488"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Delete redemption history in reward transaction",
    "description": "",
    "id": "delete-redemption-history-in-reward-transaction",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/history-controller/DeleteRedemptionHistory.feature",
    "tags": [
      {
        "name": "@DeleteRedemptionHistoryFeature",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionHistory",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 33
        }
      },
      {
        "name": "@TestSuiteId\u003d13825488",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 59
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 61,
        "name": "Create global type for each logon id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11870000,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1409700,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6864000,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2857600,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 18607400,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16874100,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3222300,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 265984500,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7704800,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 997600,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4057700,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5218600,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 270031800,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1471200,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1356100,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10127500,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 854727700,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 832474100,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 62,
        "name": "Create global type for each device id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13063100,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2150700,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2433900,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2175000,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 4958000,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6657600,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2160200,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 139027000,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3559000,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1427300,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1809800,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3053900,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 92563700,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1665900,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1217500,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5749300,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 613726200,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 741092200,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 63,
        "name": "Create global type for each logon id and device id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10236600,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1477100,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1307900,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1331900,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2187800,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5333100,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2886100,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89557800,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2121300,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1482800,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1979700,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3208400,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 142566900,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1452200,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1301400,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3477100,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 403507000,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 800609600,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 64,
        "name": "Create global and period type for each logon id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12793300,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1628400,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2427000,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1244900,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 5773200,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6218600,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2136900,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 206303900,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1665000,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1667600,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1697800,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3130900,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 196983100,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1698000,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1052900,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2675900,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3486030900,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 527040400,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 65,
        "name": "Create global and period type for each device id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 20148400,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1767800,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1834700,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1363000,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 5134800,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5427700,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2603900,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 117956300,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1360600,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1513600,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2246500,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2482900,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 88164000,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1379000,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1293500,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3388700,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 411521200,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 485596900,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 66,
        "name": "Create global and period type for each logon id and device id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8736600,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1938900,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1413600,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1382800,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3992400,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2515700,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1306200,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 140414300,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3190200,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1296400,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1446100,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2628800,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 68526000,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5072000,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1306500,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3370600,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 535799300,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 497222800,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 67,
        "name": "Create period type for each logon id and device id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11704900,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1880700,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1979000,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1685100,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3695900,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4095200,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2306600,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 144694300,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1747100,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1371800,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1918700,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2133800,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 107078600,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1630800,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1744300,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3076700,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 432758000,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 836748100,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 68,
        "name": "Create period type for each logon id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12251800,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1433800,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1413800,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 3370600,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 4841000,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6677400,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2138400,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 137445400,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1619600,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1274400,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1279600,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4260500,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 206276900,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3702700,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1941600,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4061300,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 468468300,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 665643300,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 69,
        "name": "Create period type for each device id redemption rule",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11720800,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1282800,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1444200,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1462500,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3617600,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3713000,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1610000,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 184833300,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1708900,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1817800,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1527900,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2833400,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 89754500,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2071700,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1506200,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4350500,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 376709400,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 413280400,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 154,
        "name": "Update existing redemption rule to global type for each logon id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10546700,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1412800,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1218500,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3777800,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6116100,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4010100,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1895600,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 251400600,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1274800,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 967000,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1042600,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1972600,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 81176300,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1449100,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1369200,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2580800,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1303900,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1857000,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2977100,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2919900,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1900300,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 180466000,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1670200,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1087700,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1083100,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2719400,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 76274000,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1357400,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1084200,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2833100,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 439476000,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 472169700,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 155,
        "name": "Update existing redemption rule to global type for each device id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11567800,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1387600,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1080200,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1071400,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2367200,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4180100,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2760200,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 269447100,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3393800,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1592200,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1717100,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3228100,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 66823300,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1526900,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1211300,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3195300,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1591700,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1799900,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 3050900,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3107300,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3197100,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 114200300,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1555000,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1171600,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1530700,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3419100,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 75866600,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1424300,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1255800,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3321000,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 613707300,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 707672800,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 156,
        "name": "Update existing redemption rule to global type for each logon id and device id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10965600,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1061800,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2136800,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1691300,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3275400,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3381900,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1346800,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 346896200,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1501900,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2013700,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1770800,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2984300,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 197561600,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1187500,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 845200,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2417500,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1289000,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1838900,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2852300,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2749500,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2581400,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 131609700,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1067000,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 647500,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1299300,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2059800,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 172691500,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1030500,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 693400,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2068000,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 726316000,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 1037295000,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 157,
        "name": "Update existing redemption rule to global and period type for each logon id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16160100,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1760500,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1898900,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2560200,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3163600,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15731200,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1930300,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 172127100,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1511200,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 928100,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1618400,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3933500,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 75451800,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1234300,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 755300,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2511000,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1137500,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1098100,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3108300,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1955800,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1354600,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 189437700,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1048200,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 770000,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1087300,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1922500,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 108279500,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1384900,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 993000,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1895000,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 450665400,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 431523800,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 158,
        "name": "Update existing redemption rule to global and period type for each device id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9340600,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1454600,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2012400,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2130200,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2972200,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4501100,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1518500,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 146055700,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1716500,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1267300,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2319300,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3207100,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 77329400,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1767200,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1298800,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2891600,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1905100,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1692600,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3218700,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3054100,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2212400,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 159763800,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1545200,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1336700,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1822100,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2851100,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 98090000,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1252200,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1078300,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3325700,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 465053500,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 521957100,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 159,
        "name": "Update existing redemption rule to global and period type for each logon id and device id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11142600,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1800300,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1741700,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1994300,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2917600,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6546900,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1750900,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 180283000,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2222900,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1463400,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2016500,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2726800,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 81342400,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2061600,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1628200,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4309100,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1957900,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 2086300,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3684600,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3948500,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2843300,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104819900,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2448500,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1802500,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1799900,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3192200,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 116776200,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2224300,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1490100,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4026900,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 685303000,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 929286700,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 160,
        "name": "Update existing redemption rule to period type for each logon id and device id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12752500,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1366800,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1591700,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3941000,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3900700,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4527000,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1609500,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 185462200,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1762800,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1621600,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1598600,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3041300,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 127405600,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1978100,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1445200,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5252600,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1815800,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1655400,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 4474700,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3334900,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3579800,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 279846600,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4549500,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3409600,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3935300,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1972400,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 179821200,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1624300,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1720500,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3475200,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1087701500,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 1634680600,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 161,
        "name": "Update existing redemption rule to period type for each logon id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12016300,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1652900,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1545600,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2419700,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3374200,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3997000,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1228700,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 231151500,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1542300,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1535500,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 960300,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1653800,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 185923200,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 937500,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 755100,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2505200,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1473200,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1990000,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3031700,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4121700,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2088400,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 191759900,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1155600,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 754000,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1050700,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1818900,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 235375900,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1729700,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1356700,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2908100,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1369554200,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 1199939900,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 162,
        "name": "Update existing redemption rule to period type for each device id",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;update-existing-redemption-rule-to-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10109600,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1841900,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1599900,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1606200,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2529800,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2584300,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1581300,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 128899900,
              "status": "passed"
            },
            "line": 87,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1348300,
              "status": "passed"
            },
            "line": 88,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1103900,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1302400,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2833900,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 225221300,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1707200,
              "status": "passed"
            },
            "line": 94,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1680600,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2869800,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1433800,
              "status": "passed"
            },
            "line": 102,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 103,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1709200,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 107,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3081100,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4536300,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1999300,
              "status": "passed"
            },
            "line": 116,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 520486000,
              "status": "passed"
            },
            "line": 117,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 861700,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 683600,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 821400,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1624500,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 207344600,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1319100,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1154400,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2288800,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1155712800,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 133,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 1377813200,
              "status": "passed"
            },
            "line": 142,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 143,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 247,
        "name": "Disabling redemption rule to by removing type",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;disabling-redemption-rule-to-by-removing-\u003cidentifier\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8519900,
              "status": "passed"
            },
            "line": 167,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1003700,
              "status": "passed"
            },
            "line": 168,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 998500,
              "status": "passed"
            },
            "line": 169,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1109100,
              "status": "passed"
            },
            "line": 171,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1572800,
              "status": "passed"
            },
            "line": 173,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3592300,
              "status": "passed"
            },
            "line": 176,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1203300,
              "status": "passed"
            },
            "line": 179,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 570532000,
              "status": "passed"
            },
            "line": 180,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1198800,
              "status": "passed"
            },
            "line": 181,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1127900,
              "status": "passed"
            },
            "line": 182,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1280200,
              "status": "passed"
            },
            "line": 183,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2460700,
              "status": "passed"
            },
            "line": 185,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 488337000,
              "status": "passed"
            },
            "line": 186,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 959000,
              "status": "passed"
            },
            "line": 187,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 671200,
              "status": "passed"
            },
            "line": 188,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1741900,
              "status": "passed"
            },
            "line": 189,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1046100,
              "status": "passed"
            },
            "line": 195,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 196,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1079300,
              "status": "passed"
            },
            "line": 199,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 200,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 4947400,
              "status": "passed"
            },
            "line": 203,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2069800,
              "status": "passed"
            },
            "line": 206,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1519300,
              "status": "passed"
            },
            "line": 209,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 267959600,
              "status": "passed"
            },
            "line": 210,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1045400,
              "status": "passed"
            },
            "line": 211,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 916000,
              "status": "passed"
            },
            "line": 212,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 860800,
              "status": "passed"
            },
            "line": 213,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2692700,
              "status": "passed"
            },
            "line": 215,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 125291900,
              "status": "passed"
            },
            "line": 216,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 824100,
              "status": "passed"
            },
            "line": 217,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 901600,
              "status": "passed"
            },
            "line": 218,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1742700,
              "status": "passed"
            },
            "line": 219,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 618900200,
              "status": "passed"
            },
            "line": 225,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 226,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 732960700,
              "status": "passed"
            },
            "line": 235,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 236,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 248,
        "name": "Disabling redemption rule to by removing validation",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;disabling-redemption-rule-to-by-removing-\u003cidentifier\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9145200,
              "status": "passed"
            },
            "line": 167,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1421200,
              "status": "passed"
            },
            "line": 168,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1455600,
              "status": "passed"
            },
            "line": 169,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1314500,
              "status": "passed"
            },
            "line": 171,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2635000,
              "status": "passed"
            },
            "line": 173,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3011800,
              "status": "passed"
            },
            "line": 176,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1092100,
              "status": "passed"
            },
            "line": 179,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 224607900,
              "status": "passed"
            },
            "line": 180,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1213400,
              "status": "passed"
            },
            "line": 181,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1282600,
              "status": "passed"
            },
            "line": 182,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1455000,
              "status": "passed"
            },
            "line": 183,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2345300,
              "status": "passed"
            },
            "line": 185,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 375586800,
              "status": "passed"
            },
            "line": 186,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1440000,
              "status": "passed"
            },
            "line": 187,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1159900,
              "status": "passed"
            },
            "line": 188,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3168800,
              "status": "passed"
            },
            "line": 189,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1326200,
              "status": "passed"
            },
            "line": 195,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 196,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 1373000,
              "status": "passed"
            },
            "line": 199,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 200,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 3246400,
              "status": "passed"
            },
            "line": 203,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3551400,
              "status": "passed"
            },
            "line": 206,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1792100,
              "status": "passed"
            },
            "line": 209,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 124866400,
              "status": "passed"
            },
            "line": 210,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1095500,
              "status": "passed"
            },
            "line": 211,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1319600,
              "status": "passed"
            },
            "line": 212,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 937100,
              "status": "passed"
            },
            "line": 213,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1917200,
              "status": "passed"
            },
            "line": 215,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 87995400,
              "status": "passed"
            },
            "line": 216,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1066700,
              "status": "passed"
            },
            "line": 217,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 769300,
              "status": "passed"
            },
            "line": 218,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2177200,
              "status": "passed"
            },
            "line": 219,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 690492600,
              "status": "passed"
            },
            "line": 225,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 226,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 916944600,
              "status": "passed"
            },
            "line": 235,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 236,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 249,
        "name": "Disabling redemption rule to by removing type and validation",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;disabling-redemption-rule-to-by-removing-\u003cidentifier\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11787300,
              "status": "passed"
            },
            "line": 167,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1636700,
              "status": "passed"
            },
            "line": 168,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2063600,
              "status": "passed"
            },
            "line": 169,
            "name": "[reward-transaction] prepare request data types with value",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "GLOBAL"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3037600,
              "status": "passed"
            },
            "line": 171,
            "name": "[reward-transaction] prepare request data validations with value",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "LOGON_ID"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2348200,
              "status": "passed"
            },
            "line": 173,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3531800,
              "status": "passed"
            },
            "line": 176,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1493000,
              "status": "passed"
            },
            "line": 179,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 130349300,
              "status": "passed"
            },
            "line": 180,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1299000,
              "status": "passed"
            },
            "line": 181,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 872500,
              "status": "passed"
            },
            "line": 182,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1430200,
              "status": "passed"
            },
            "line": 183,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2056700,
              "status": "passed"
            },
            "line": 185,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 91393300,
              "status": "passed"
            },
            "line": 186,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 901400,
              "status": "passed"
            },
            "line": 187,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 620700,
              "status": "passed"
            },
            "line": 188,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1435100,
              "status": "passed"
            },
            "line": 189,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 886500,
              "status": "passed"
            },
            "line": 195,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "Given ",
            "doc_string": {
              "line": 196,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 1107800,
              "status": "passed"
            },
            "line": 199,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 200,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 2734300,
              "status": "passed"
            },
            "line": 203,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2356400,
              "status": "passed"
            },
            "line": 206,
            "name": "[reward-transaction] prepare request data updateRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1299100,
              "status": "passed"
            },
            "line": 209,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 133525400,
              "status": "passed"
            },
            "line": 210,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 971100,
              "status": "passed"
            },
            "line": 211,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1105500,
              "status": "passed"
            },
            "line": 212,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1044900,
              "status": "passed"
            },
            "line": 213,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1831800,
              "status": "passed"
            },
            "line": 215,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 220557100,
              "status": "passed"
            },
            "line": 216,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1351400,
              "status": "passed"
            },
            "line": 217,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 987100,
              "status": "passed"
            },
            "line": 218,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1624900,
              "status": "passed"
            },
            "line": 219,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027updateRuleRequest\u0027][\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 746624400,
              "status": "passed"
            },
            "line": 225,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 226,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 533137700,
              "status": "passed"
            },
            "line": 235,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 236,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 280,
        "name": "Create redemption rule when validations is null",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10010900,
              "status": "passed"
            },
            "line": 254,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1207600,
              "status": "passed"
            },
            "line": 255,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1572600,
              "status": "passed"
            },
            "line": 256,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 257,
              "value": ""
            }
          },
          {
            "result": {
              "duration": 2748400,
              "status": "passed"
            },
            "line": 260,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 261,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 8400400,
              "status": "passed"
            },
            "line": 264,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "2",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4002900,
              "status": "passed"
            },
            "line": 267,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1747200,
              "status": "passed"
            },
            "line": 270,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 77470200,
              "status": "passed"
            },
            "line": 271,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2257400,
              "status": "passed"
            },
            "line": 272,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1092200,
              "status": "passed"
            },
            "line": 273,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2442200,
              "status": "passed"
            },
            "line": 274,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 281,
        "name": "Create redemption rule when types is null",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11846600,
              "status": "passed"
            },
            "line": 254,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2454500,
              "status": "passed"
            },
            "line": 255,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2181800,
              "status": "passed"
            },
            "line": 256,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 257,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 3027800,
              "status": "passed"
            },
            "line": 260,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 261,
              "value": ""
            }
          },
          {
            "result": {
              "duration": 3926800,
              "status": "passed"
            },
            "line": 264,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "2",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2950400,
              "status": "passed"
            },
            "line": 267,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1508200,
              "status": "passed"
            },
            "line": 270,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 111831800,
              "status": "passed"
            },
            "line": 271,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1241100,
              "status": "passed"
            },
            "line": 272,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1199000,
              "status": "passed"
            },
            "line": 273,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2653800,
              "status": "passed"
            },
            "line": 274,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 282,
        "name": "Create redemption rule when total is \u003c 0",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9880500,
              "status": "passed"
            },
            "line": 254,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1243900,
              "status": "passed"
            },
            "line": 255,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2329300,
              "status": "passed"
            },
            "line": 256,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 257,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1500400,
              "status": "passed"
            },
            "line": 260,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 261,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2905300,
              "status": "passed"
            },
            "line": 264,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "-1",
                  "2",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2659400,
              "status": "passed"
            },
            "line": 267,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1618700,
              "status": "passed"
            },
            "line": 270,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 172190200,
              "status": "passed"
            },
            "line": 271,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1485100,
              "status": "passed"
            },
            "line": 272,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1011400,
              "status": "passed"
            },
            "line": 273,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4623100,
              "status": "passed"
            },
            "line": 274,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 283,
        "name": "Create redemption rule when totalPerPeriod is \u003c 0",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10984800,
              "status": "passed"
            },
            "line": 254,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2337800,
              "status": "passed"
            },
            "line": 255,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1240300,
              "status": "passed"
            },
            "line": 256,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 257,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1303200,
              "status": "passed"
            },
            "line": 260,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 261,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 3000100,
              "status": "passed"
            },
            "line": 264,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "1",
                  "-1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4436200,
              "status": "passed"
            },
            "line": 267,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1683200,
              "status": "passed"
            },
            "line": 270,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82935000,
              "status": "passed"
            },
            "line": 271,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1242700,
              "status": "passed"
            },
            "line": 272,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1147400,
              "status": "passed"
            },
            "line": 273,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2036200,
              "status": "passed"
            },
            "line": 274,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 284,
        "name": "Create redemption rule when period is \u003c 0",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10332100,
              "status": "passed"
            },
            "line": 254,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1566300,
              "status": "passed"
            },
            "line": 255,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1318100,
              "status": "passed"
            },
            "line": 256,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 257,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1148500,
              "status": "passed"
            },
            "line": 260,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 261,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2404000,
              "status": "passed"
            },
            "line": 264,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "1",
                  "1",
                  "-1",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2812000,
              "status": "passed"
            },
            "line": 267,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1540600,
              "status": "passed"
            },
            "line": 270,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 92774100,
              "status": "passed"
            },
            "line": 271,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 985200,
              "status": "passed"
            },
            "line": 272,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1082800,
              "status": "passed"
            },
            "line": 273,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1549800,
              "status": "passed"
            },
            "line": 274,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 285,
        "name": "Create redemption rule when body is empty",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10142900,
              "status": "passed"
            },
            "line": 254,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 896000,
              "status": "passed"
            },
            "line": 255,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1516600,
              "status": "passed"
            },
            "line": 256,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 257,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1128600,
              "status": "passed"
            },
            "line": 260,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 261,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2283200,
              "status": "passed"
            },
            "line": 264,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "1",
                  "1",
                  "0",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4218500,
              "status": "passed"
            },
            "line": 267,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1191900,
              "status": "passed"
            },
            "line": 270,
            "name": "[reward-transaction] prepare body request with value \"{}\"",
            "match": {
              "arguments": [
                {
                  "val": "{}",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 69548900,
              "status": "passed"
            },
            "line": 271,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 985100,
              "status": "passed"
            },
            "line": 272,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 859500,
              "status": "passed"
            },
            "line": 273,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2546300,
              "status": "passed"
            },
            "line": 274,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 286,
        "name": "Create redemption rule when body is not valid",
        "description": "",
        "id": "create-redemption-rule-for-voucher-in-reward-transaction;create-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12895200,
              "status": "passed"
            },
            "line": 254,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1285800,
              "status": "passed"
            },
            "line": 255,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1617600,
              "status": "passed"
            },
            "line": 256,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 257,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1617700,
              "status": "passed"
            },
            "line": 260,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 261,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 5087900,
              "status": "passed"
            },
            "line": 264,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "1",
                  "1",
                  "0",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4974400,
              "status": "passed"
            },
            "line": 267,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3367000,
              "status": "passed"
            },
            "line": 270,
            "name": "[reward-transaction] prepare body request with value \"abc\"",
            "match": {
              "arguments": [
                {
                  "val": "abc",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 80107200,
              "status": "passed"
            },
            "line": 271,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1919000,
              "status": "passed"
            },
            "line": 272,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1292000,
              "status": "passed"
            },
            "line": 273,
            "name": "[reward-transaction] response statusCode should be 500 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1530200,
              "status": "passed"
            },
            "line": 274,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "500"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Create redemption rule for voucher in reward transaction",
    "description": "",
    "id": "create-redemption-rule-for-voucher-in-reward-transaction",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/rule-controller/CreateRule.feature",
    "tags": [
      {
        "name": "@CreateRedemptionRuleFeature",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionRule",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 30
        }
      },
      {
        "name": "@TestSuiteId\u003d13825487",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 53
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 61,
        "name": "Get global type for each logon id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11798700,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1371800,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1444600,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 3021300,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2615500,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6290200,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1259800,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 120152700,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 882900,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1106400,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1331600,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2277800,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 73320100,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1608100,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1167400,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4582400,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 557725500,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 673685000,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 62,
        "name": "Get global type for each device id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10169200,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1160400,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1027600,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1088100,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2295900,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1797000,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2090600,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 163008300,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1401200,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1229400,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1233700,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2351500,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 151214100,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1764700,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1270900,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2698800,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 932083600,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 612668800,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 63,
        "name": "Get global type for each logon id and device id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8010000,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 823100,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1140900,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1345500,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2062300,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1508000,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 746100,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 154104000,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1448400,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 984600,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1344200,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3010000,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 115570900,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1025700,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1029100,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2227300,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 416997800,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 502406000,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 64,
        "name": "Get global and period type for each logon id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13129900,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2918600,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1743500,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1520100,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3484800,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2777500,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1260900,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 87654200,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1577700,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1283600,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1834400,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2394200,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 98499400,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1278200,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1094300,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2657700,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 558458700,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 906514800,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 65,
        "name": "Get global and period type for each device id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10691900,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1279800,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1030800,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1260300,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 1697700,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1615500,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1032500,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 113177000,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1298700,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1157600,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1164600,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2077800,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 110694100,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1608800,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1326300,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3946500,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 569697900,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 633692700,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 66,
        "name": "Get global and period type for each logon id and device id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9814200,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1258200,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1484600,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1249900,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 2102900,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2153800,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1676800,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 71456500,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 899600,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 623400,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 772000,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1507900,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 83259500,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2211000,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1024300,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2433800,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 468376600,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 352810200,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 67,
        "name": "Get period type for each logon id and device id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12633300,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1841500,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1869900,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1570300,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3584900,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3140800,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2337400,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83256700,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1305500,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 731300,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 900500,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2360200,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 60236200,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1488000,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1013300,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2678900,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 429281400,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 412593500,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 68,
        "name": "Get period type for each logon id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10679400,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1496400,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1260100,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1230900,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3495000,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3189200,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1367400,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 176925600,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1472400,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1174400,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1554700,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2087400,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 59462800,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1581600,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1089600,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2811900,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 343122500,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 572603300,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 69,
        "name": "Get period type for each device id redemption rule",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-\u003ctype\u003e-type-for-each-\u003cvalidation\u003e-redemption-rule;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9543000,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1356800,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1135000,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 10,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1006100,
              "status": "passed"
            },
            "line": 13,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 14,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 2085900,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "10",
                  "1",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2559200,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1259900,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 69129300,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1671100,
              "status": "passed"
            },
            "line": 25,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1266000,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1453800,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2135500,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 62742800,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1178900,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1049100,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3532300,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 404093400,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 40,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 350021800,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 50,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 84,
        "name": "Get redemption rule when voucherSku is empty",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13300100,
              "status": "passed"
            },
            "line": 73,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1867500,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 99763200,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1584800,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1278000,
              "status": "passed"
            },
            "line": 77,
            "name": "[reward-transaction] response statusCode should be 405 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "405",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2607700,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027latestResponseData\u0027][\u0027body\u0027][\u0027status\u0027])",
                  "EQUAL",
                  "405"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 85,
        "name": "Get redemption rule when voucherSku is not found",
        "description": "",
        "id": "get-redemption-rule-for-voucher-in-reward-transaction;get-redemption-rule-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10340500,
              "status": "passed"
            },
            "line": 73,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1150400,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"random(100)\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "random(100)",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 76671900,
              "status": "passed"
            },
            "line": 75,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1187100,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1314600,
              "status": "passed"
            },
            "line": 77,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2576100,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@GetRedemptionRuleFeature"
          },
          {
            "name": "@RewardTransactionRule"
          },
          {
            "name": "@TestSuiteId\u003d13825487"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Get redemption rule for voucher in reward transaction",
    "description": "",
    "id": "get-redemption-rule-for-voucher-in-reward-transaction",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/rule-controller/GetRedemptionRule.feature",
    "tags": [
      {
        "name": "@GetRedemptionRuleFeature",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionRule",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 27
        }
      },
      {
        "name": "@TestSuiteId\u003d13825487",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 50
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Create reward transaction system parameter in positive scenario",
        "description": "",
        "id": "create-system-parameter-in-reward-transaction;create-reward-transaction-system-parameter-in-positive-scenario",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11939600,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1442700,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1219500,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1388700,
              "status": "passed"
            },
            "line": 10,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9873000,
              "status": "passed"
            },
            "line": 11,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1321600,
              "status": "passed"
            },
            "line": 14,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 69531200,
              "status": "passed"
            },
            "line": 15,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4963900,
              "status": "passed"
            },
            "line": 16,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1201500,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3249100,
              "status": "passed"
            },
            "line": 18,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2277000,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 69289700,
              "status": "passed"
            },
            "line": 21,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4426400,
              "status": "passed"
            },
            "line": 22,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1148600,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7399800,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2535800,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 63438000,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 794100,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1662900,
              "status": "passed"
            },
            "line": 35,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 65436400,
              "status": "passed"
            },
            "line": 36,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 757800,
              "status": "passed"
            },
            "line": 37,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 588200,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2183500,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 45,
        "name": "Create duplicate reward transaction system parameter",
        "description": "",
        "id": "create-system-parameter-in-reward-transaction;create-duplicate-reward-transaction-system-parameter",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8583100,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1843900,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1007100,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 695400,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2965600,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 964200,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 71658500,
              "status": "passed"
            },
            "line": 55,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1420700,
              "status": "passed"
            },
            "line": 56,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1255100,
              "status": "passed"
            },
            "line": 57,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 820500,
              "status": "passed"
            },
            "line": 58,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1498500,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 71694400,
              "status": "passed"
            },
            "line": 61,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 980200,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 582800,
              "status": "passed"
            },
            "line": 63,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2866800,
              "status": "passed"
            },
            "line": 64,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2178500,
              "status": "passed"
            },
            "line": 71,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 71719600,
              "status": "passed"
            },
            "line": 72,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1219100,
              "status": "passed"
            },
            "line": 73,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1036700,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] response statusCode should be 500 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2275800,
              "status": "passed"
            },
            "line": 76,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 65105200,
              "status": "passed"
            },
            "line": 77,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1303700,
              "status": "passed"
            },
            "line": 78,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2223000,
              "status": "passed"
            },
            "line": 80,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 75086000,
              "status": "passed"
            },
            "line": 81,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1111000,
              "status": "passed"
            },
            "line": 82,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 877200,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2853800,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 105,
        "name": "Create reward transaction system parameter when variable is empty",
        "description": "",
        "id": "create-system-parameter-in-reward-transaction;create-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12091900,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3468900,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "",
                  "random(10)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2557300,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 60314300,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 972800,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 832700,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3060800,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 106,
        "name": "Create reward transaction system parameter when value is empty",
        "description": "",
        "id": "create-system-parameter-in-reward-transaction;create-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9856000,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2349600,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(10)",
                  "",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1307000,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 78636500,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1333200,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1072100,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2430100,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 107,
        "name": "Create reward transaction system parameter when description is empty",
        "description": "",
        "id": "create-system-parameter-in-reward-transaction;create-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10283200,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2117600,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(10)",
                  "random(23)",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1271400,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 60791000,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1334300,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1046700,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2748300,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 108,
        "name": "Create reward transaction system parameter when body is empty",
        "description": "",
        "id": "create-system-parameter-in-reward-transaction;create-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15202700,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2062000,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(10)",
                  "random(10)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1194100,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare body request with value \"{}\"",
            "match": {
              "arguments": [
                {
                  "val": "{}",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 65914700,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1947900,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1215600,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1900900,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 109,
        "name": "Create reward transaction system parameter when body is not valid",
        "description": "",
        "id": "create-system-parameter-in-reward-transaction;create-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9856800,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1909200,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(10)",
                  "random(10)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1482800,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare body request with value \"abc\"",
            "match": {
              "arguments": [
                {
                  "val": "abc",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 57850700,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1398600,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 980500,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 500 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3095600,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027createSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "500"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@CreateSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Create system parameter in reward transaction",
    "description": "",
    "id": "create-system-parameter-in-reward-transaction",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/system-parameter-controller/CreateSystemParameter.feature",
    "tags": [
      {
        "name": "@CreateSystemParameterRewardTransactionFeature",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionSystemParameter",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 48
        }
      },
      {
        "name": "@TestSuiteId\u003d13825490",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 82
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Delete reward transaction system parameter in positive scenario",
        "description": "",
        "id": "delete-a-system-parameter-in-reward-transaction;delete-reward-transaction-system-parameter-in-positive-scenario",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 17255500,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3431200,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3886100,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1905000,
              "status": "passed"
            },
            "line": 10,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3654300,
              "status": "passed"
            },
            "line": 11,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1743700,
              "status": "passed"
            },
            "line": 14,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 271563500,
              "status": "passed"
            },
            "line": 15,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1357100,
              "status": "passed"
            },
            "line": 16,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1365600,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1140000,
              "status": "passed"
            },
            "line": 18,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2430900,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 187437000,
              "status": "passed"
            },
            "line": 21,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1484100,
              "status": "passed"
            },
            "line": 22,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1108800,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4288700,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2921400,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 66467600,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 935800,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2445900,
              "status": "passed"
            },
            "line": 35,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 61594600,
              "status": "passed"
            },
            "line": 36,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 788400,
              "status": "passed"
            },
            "line": 37,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 577700,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1176200,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@DeleteSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 57,
        "name": "Delete reward transaction system parameter when variable is empty",
        "description": "",
        "id": "delete-a-system-parameter-in-reward-transaction;delete-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10274200,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1294600,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] prepare pathParam for variable with value \"\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 63665700,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 926200,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction`] assign previous response data to deleteSystemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "deleteSystemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 669500,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] response statusCode should be 405 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "405",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2119600,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteSystemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027latestResponseData\u0027][\u0027body\u0027][\u0027status\u0027])",
                  "EQUAL",
                  "405"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@DeleteSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 58,
        "name": "Delete reward transaction system parameter when variable is not found",
        "description": "",
        "id": "delete-a-system-parameter-in-reward-transaction;delete-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11802900,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1159800,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] prepare pathParam for variable with value \"random(100)\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "random(100)",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91697100,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1080000,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction`] assign previous response data to deleteSystemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "deleteSystemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 999100,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2609800,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteSystemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027deleteSystemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@DeleteSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Delete a system parameter in reward transaction",
    "description": "",
    "id": "delete-a-system-parameter-in-reward-transaction",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/system-parameter-controller/DeleteSystemParameter.feature",
    "tags": [
      {
        "name": "@DeleteSystemParameterRewardTransactionFeature",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionSystemParameter",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 48
        }
      },
      {
        "name": "@TestSuiteId\u003d13825490",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 82
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Get reward transaction system parameter in positive scenario",
        "description": "",
        "id": "get-system-parameter-in-reward-transaction;get-reward-transaction-system-parameter-in-positive-scenario",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10071800,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1822700,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1123000,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1137200,
              "status": "passed"
            },
            "line": 10,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3282200,
              "status": "passed"
            },
            "line": 11,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1424600,
              "status": "passed"
            },
            "line": 14,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74963100,
              "status": "passed"
            },
            "line": 15,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1213300,
              "status": "passed"
            },
            "line": 16,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 876100,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 929100,
              "status": "passed"
            },
            "line": 18,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1845400,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 85176200,
              "status": "passed"
            },
            "line": 21,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 891300,
              "status": "passed"
            },
            "line": 22,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 735200,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3996500,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1864800,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 65992500,
              "status": "passed"
            },
            "line": 32,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 670600,
              "status": "passed"
            },
            "line": 33,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1543500,
              "status": "passed"
            },
            "line": 35,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 126612500,
              "status": "passed"
            },
            "line": 36,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 886600,
              "status": "passed"
            },
            "line": 37,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 773600,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1896100,
              "status": "passed"
            },
            "line": 39,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@GetSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TesSuiteId\u003d13825490"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 57,
        "name": "Get reward transaction system parameter when variable is empty",
        "description": "",
        "id": "get-system-parameter-in-reward-transaction;get-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7556400,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 687700,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] prepare pathParam for variable with value \"\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85576100,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1502100,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1218500,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] response statusCode should be 405 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "405",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2901800,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027latestResponseData\u0027][\u0027body\u0027][\u0027status\u0027])",
                  "EQUAL",
                  "405"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@GetSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TesSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 58,
        "name": "Get reward transaction system parameter when variable is not found",
        "description": "",
        "id": "get-system-parameter-in-reward-transaction;get-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10742500,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1063400,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] prepare pathParam for variable with value \"random(100)\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "random(100)",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 75270100,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1404300,
              "status": "passed"
            },
            "line": 49,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1134700,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2272900,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@GetSystemParameterRewardTransactionFeature"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TesSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Get system parameter in reward transaction",
    "description": "",
    "id": "get-system-parameter-in-reward-transaction",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/system-parameter-controller/GetSystemParameter.feature",
    "tags": [
      {
        "name": "@GetSystemParameterRewardTransactionFeature",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionSystemParameter",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 45
        }
      },
      {
        "name": "@TesSuiteId\u003d13825490",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 79
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "Update reward transaction system parameter in positive scenario",
        "description": "",
        "id": "update-system-parameter-in-reward-transaction;update-reward-transaction-system-parameter-in-positive-scenario",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14574300,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1335100,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1315100,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2384900,
              "status": "passed"
            },
            "line": 10,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3865900,
              "status": "passed"
            },
            "line": 11,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1334600,
              "status": "passed"
            },
            "line": 14,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 70947000,
              "status": "passed"
            },
            "line": 15,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1238200,
              "status": "passed"
            },
            "line": 16,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1425300,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1437800,
              "status": "passed"
            },
            "line": 18,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2405100,
              "status": "passed"
            },
            "line": 20,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 63860400,
              "status": "passed"
            },
            "line": 21,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1168900,
              "status": "passed"
            },
            "line": 22,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1103100,
              "status": "passed"
            },
            "line": 23,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3350200,
              "status": "passed"
            },
            "line": 24,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6184300,
              "status": "passed"
            },
            "line": 31,
            "name": "[reward-transaction] prepare request data updateSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "some new value",
                  "some new description"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2304100,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 75447500,
              "status": "passed"
            },
            "line": 35,
            "name": "[reward-transaction] try PUT request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "PUT",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5070600,
              "status": "passed"
            },
            "line": 36,
            "name": "[reward-transaction] assign previous response data to updateSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1529000,
              "status": "passed"
            },
            "line": 37,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3411200,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] response data \"response($[\u0027updateSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027updateSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2280200,
              "status": "passed"
            },
            "line": 40,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 69033400,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1659200,
              "status": "passed"
            },
            "line": 42,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1179100,
              "status": "passed"
            },
            "line": 43,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3177900,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027updateSystemParamRequest\u0027][\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027updateSystemParamRequest\u0027][\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027updateSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1528200,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 63735400,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1301500,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2120500,
              "status": "passed"
            },
            "line": 55,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 59061800,
              "status": "passed"
            },
            "line": 56,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1368400,
              "status": "passed"
            },
            "line": 57,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 777800,
              "status": "passed"
            },
            "line": 58,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3229800,
              "status": "passed"
            },
            "line": 59,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@UpdateSystemParameterRewardTransaction"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 65,
        "name": "Update non existing system parameter",
        "description": "",
        "id": "update-system-parameter-in-reward-transaction;update-non-existing-system-parameter",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7858400,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2179600,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] prepare request data updateSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(100)",
                  "some new value",
                  "some new description"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1578800,
              "status": "passed"
            },
            "line": 70,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62134200,
              "status": "passed"
            },
            "line": 71,
            "name": "[reward-transaction] try PUT request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "PUT",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 789300,
              "status": "passed"
            },
            "line": 72,
            "name": "[reward-transaction] assign previous response data to updateSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 901200,
              "status": "passed"
            },
            "line": 73,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2262800,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@UpdateSystemParameterRewardTransaction"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 132,
        "name": "Update reward transaction system parameter when variable is empty",
        "description": "",
        "id": "update-system-parameter-in-reward-transaction;update-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7805600,
              "status": "passed"
            },
            "line": 82,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1299600,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2565100,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1611600,
              "status": "passed"
            },
            "line": 85,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4872000,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1200300,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62649700,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1247200,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1045400,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 976000,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2687800,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 70839600,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1066400,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 946400,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2968700,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1726800,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data updateSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "",
                  "random(10)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1209400,
              "status": "passed"
            },
            "line": 109,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83063300,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] try PUT request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "PUT",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1449400,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] assign previous response data to updateSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1149600,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2337400,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2049400,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 152811600,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1372200,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2334500,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 72652700,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 761000,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1250600,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1991500,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@UpdateSystemParameterRewardTransaction"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 133,
        "name": "Update reward transaction system parameter when value is empty",
        "description": "",
        "id": "update-system-parameter-in-reward-transaction;update-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8861800,
              "status": "passed"
            },
            "line": 82,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 981000,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 665300,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 759300,
              "status": "passed"
            },
            "line": 85,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4173400,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1309500,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 69825700,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1509800,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1509500,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1305900,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2008100,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 61612700,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1719400,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1149800,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3627400,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2263300,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data updateSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(10)",
                  "",
                  "random(23)"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2200900,
              "status": "passed"
            },
            "line": 109,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62188700,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] try PUT request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "PUT",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1643300,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] assign previous response data to updateSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2677800,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1852600,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2096000,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 60275000,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1193000,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2167300,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 70698000,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1622600,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1686400,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2479000,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@UpdateSystemParameterRewardTransaction"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 134,
        "name": "Update reward transaction system parameter when description is empty",
        "description": "",
        "id": "update-system-parameter-in-reward-transaction;update-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10181300,
              "status": "passed"
            },
            "line": 82,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3325000,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1651800,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1049300,
              "status": "passed"
            },
            "line": 85,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6074500,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1439700,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 81138400,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1241400,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1111800,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1927800,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2228200,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 88098800,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 848500,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 672400,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2588200,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2704300,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data updateSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(10)",
                  "random(23)",
                  ""
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1935300,
              "status": "passed"
            },
            "line": 109,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027updateSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027updateSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90130800,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] try PUT request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "PUT",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 812000,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] assign previous response data to updateSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 735500,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2778700,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2226400,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 90977700,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1054100,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3158800,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 72326600,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 882600,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 610800,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1750600,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@UpdateSystemParameterRewardTransaction"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 135,
        "name": "Update reward transaction system parameter when body is empty",
        "description": "",
        "id": "update-system-parameter-in-reward-transaction;update-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7966200,
              "status": "passed"
            },
            "line": 82,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1620500,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1209000,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1214600,
              "status": "passed"
            },
            "line": 85,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4449100,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1535500,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 138792100,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1724500,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1231500,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1740900,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2765700,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 121519000,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1424500,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1831600,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4373900,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2374400,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data updateSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(10)",
                  "random(10)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2514600,
              "status": "passed"
            },
            "line": 109,
            "name": "[reward-transaction] prepare body request with value \"{}\"",
            "match": {
              "arguments": [
                {
                  "val": "{}",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 79947500,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] try PUT request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "PUT",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1425400,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] assign previous response data to updateSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1055000,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3235800,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1806700,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 102895700,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1998800,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2824200,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 79142900,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 952600,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 949500,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1422400,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@UpdateSystemParameterRewardTransaction"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 136,
        "name": "Update reward transaction system parameter when body is not valid",
        "description": "",
        "id": "update-system-parameter-in-reward-transaction;update-reward-transaction-system-parameter-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11259900,
              "status": "passed"
            },
            "line": 82,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1615300,
              "status": "passed"
            },
            "line": 83,
            "name": "[reward-transaction] prepare request data variable with value \"(test_,random(10))\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10))",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1259300,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] prepare request data value with value \"random(23)\"",
            "match": {
              "arguments": [
                {
                  "val": "value",
                  "offset": 42
                },
                {
                  "val": "random(23)",
                  "offset": 60
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2265200,
              "status": "passed"
            },
            "line": 85,
            "name": "[reward-transaction] prepare request data description with value \"Some testing data please ignore\"",
            "match": {
              "arguments": [
                {
                  "val": "description",
                  "offset": 42
                },
                {
                  "val": "Some testing data please ignore",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6412100,
              "status": "passed"
            },
            "line": 86,
            "name": "[reward-transaction] prepare request data createSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "request($[\u0027variable\u0027])",
                  "request($[\u0027value\u0027])",
                  "request($[\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1781500,
              "status": "passed"
            },
            "line": 89,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createSystemParamRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createSystemParamRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 78817800,
              "status": "passed"
            },
            "line": 90,
            "name": "[reward-transaction] try POST request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1728600,
              "status": "passed"
            },
            "line": 91,
            "name": "[reward-transaction] assign previous response data to createSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "createSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1704900,
              "status": "passed"
            },
            "line": 92,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1920800,
              "status": "passed"
            },
            "line": 93,
            "name": "[reward-transaction] response data \"response($[\u0027createSystemParamResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027createSystemParamResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 78
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2871700,
              "status": "passed"
            },
            "line": 95,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 83268700,
              "status": "passed"
            },
            "line": 96,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1653300,
              "status": "passed"
            },
            "line": 97,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1315700,
              "status": "passed"
            },
            "line": 98,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4217600,
              "status": "passed"
            },
            "line": 99,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027variable\u0027])",
                  "EQUAL",
                  "request($[\u0027variable\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027value\u0027])",
                  "EQUAL",
                  "request($[\u0027value\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027][\u0027description\u0027])",
                  "EQUAL",
                  "request($[\u0027createSystemParamRequest\u0027][\u0027description\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2982600,
              "status": "passed"
            },
            "line": 106,
            "name": "[reward-transaction] prepare request data updateSystemParamRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "variable",
                  "value",
                  "description"
                ]
              },
              {
                "cells": [
                  "random(10)",
                  "random(10)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2626600,
              "status": "passed"
            },
            "line": 109,
            "name": "[reward-transaction] prepare body request with value \"abc\"",
            "match": {
              "arguments": [
                {
                  "val": "abc",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 77475000,
              "status": "passed"
            },
            "line": 110,
            "name": "[reward-transaction] try PUT request to \"system-parameter/\"",
            "match": {
              "arguments": [
                {
                  "val": "PUT",
                  "offset": 25
                },
                {
                  "val": "system-parameter/",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1755400,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] assign previous response data to updateSystemParamResponse",
            "match": {
              "arguments": [
                {
                  "val": "updateSystemParamResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1271400,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] response statusCode should be 500 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4061900,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027updateSystemParamResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "500"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2761900,
              "status": "passed"
            },
            "line": 118,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 85569600,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] try DELETE request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "DELETE",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 44
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1351300,
              "status": "passed"
            },
            "line": 120,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2565600,
              "status": "passed"
            },
            "line": 122,
            "name": "[reward-transaction] prepare pathParam for variable with value \"request($[\u0027variable\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "variable",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027variable\u0027])",
                  "offset": 64
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 85529300,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] try GET request to \"system-parameter/{variable}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "system-parameter/{variable}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1674600,
              "status": "passed"
            },
            "line": 124,
            "name": "[reward-transaction`] assign previous response data to systemParameterResponse",
            "match": {
              "arguments": [
                {
                  "val": "systemParameterResponse",
                  "offset": 55
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1207900,
              "status": "passed"
            },
            "line": 125,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3405000,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027systemParameterResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "401"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@UpdateSystemParameterRewardTransaction"
          },
          {
            "name": "@RewardTransactionSystemParameter"
          },
          {
            "name": "@TestSuiteId\u003d13825490"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Update system parameter in reward transaction",
    "description": "",
    "id": "update-system-parameter-in-reward-transaction",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/system-parameter-controller/UpdateSystemParameter.feature",
    "tags": [
      {
        "name": "@UpdateSystemParameterRewardTransaction",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionSystemParameter",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 41
        }
      },
      {
        "name": "@TestSuiteId\u003d13825490",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 75
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 5,
        "name": "User still eligible to redeem reward with no rule applied",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-reward-with-no-rule-applied",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8869300,
              "status": "passed"
            },
            "line": 6,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 940200,
              "status": "passed"
            },
            "line": 7,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1287000,
              "status": "passed"
            },
            "line": 8,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2778800,
              "status": "passed"
            },
            "line": 9,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 422076300,
              "status": "passed"
            },
            "line": 10,
            "name": "[reward-transaction] create \"3\" redemption history in the previous \"1\" to \"7\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"7\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5721800,
              "status": "passed"
            },
            "line": 11,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1168600,
              "status": "passed"
            },
            "line": 14,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 137716000,
              "status": "passed"
            },
            "line": 15,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4739000,
              "status": "passed"
            },
            "line": 16,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1470400,
              "status": "passed"
            },
            "line": 17,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4060600,
              "status": "passed"
            },
            "line": 18,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 96,
        "name": "User still eligible to redeem before reaching global limit for logon id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13436300,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1556700,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1444900,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1979100,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2136400,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1599500,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 4639100,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13229000,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8961100,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 198184800,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 901700,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 607300,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 823400,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1549800,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 70404100,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1244200,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1292300,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3301300,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 365870700,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"2\" redemption history in the previous \"1\" to \"7\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"7\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1981800,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1213600,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 145341600,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 792900,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 588800,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1659300,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 422772800,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 337761400,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 97,
        "name": "User still eligible to redeem before reaching global limit for device id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9786900,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1368600,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1273000,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1173100,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1205900,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1378600,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2978300,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3173200,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1397900,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 102760800,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1139300,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1142800,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1611900,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2403700,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 94700900,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1391200,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1089900,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3099500,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 443959500,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"2\" redemption history in the previous \"1\" to \"7\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"7\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2562800,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1348500,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 160905800,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1077600,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 809300,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1777100,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 372741900,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 370044200,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 98,
        "name": "User still eligible to redeem before reaching period limit for logon id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9554100,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 888600,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1128500,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1231200,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1104400,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1089000,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 4503500,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "30",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2915600,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1092300,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 63490400,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 759600,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 517200,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1167700,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2164200,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 60916700,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 892600,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 864500,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2146900,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 354156600,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"2\" redemption history in the previous \"1\" to \"7\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"7\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2682000,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1337000,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83537000,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 846100,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 700200,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1790500,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 378251900,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 430200300,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 99,
        "name": "User still eligible to redeem before reaching period limit for logon id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7297300,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 913200,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1016600,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 783000,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 767500,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 723500,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 1360900,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "30",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1332900,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 695400,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 155722600,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 736500,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 527700,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1113500,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2516200,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 57727900,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 792200,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 689000,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1586900,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 536949800,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"4\" redemption history in the previous \"7\" to \"14\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"4\"",
                  "offset": 28
                },
                {
                  "val": "\"7\"",
                  "offset": 67
                },
                {
                  "val": "\"14\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1948400,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1300700,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 88594100,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1113700,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 829700,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1627000,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 377144600,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 444149900,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 100,
        "name": "User still eligible to redeem before reaching period limit for device id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11693800,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2073800,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 853200,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1535500,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1036500,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1335400,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 2734700,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "30",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6130000,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4900000,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 123813400,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 785200,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 693200,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1133200,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1737800,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 117376700,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1158600,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1140900,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1524100,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 652233100,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"2\" redemption history in the previous \"1\" to \"7\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"2\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"7\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3916500,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2194600,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 109047900,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1293400,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1183600,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1854600,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 425349100,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 489954600,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 101,
        "name": "User still eligible to redeem before reaching period limit for device id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9497400,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1404200,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1433200,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1415400,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1487000,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1482000,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 2895100,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "30",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3434500,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1900400,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 127465500,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1254700,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 978500,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1165600,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2087100,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 75207900,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1115500,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1048400,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2573600,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 870946600,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"4\" redemption history in the previous \"7\" to \"14\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"4\"",
                  "offset": 28
                },
                {
                  "val": "\"7\"",
                  "offset": 67
                },
                {
                  "val": "\"14\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2654900,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1862100,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 133491700,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1115600,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1052900,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1796200,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 507221600,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 403863900,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 102,
        "name": "User still eligible to redeem before reaching no limit for device id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10989100,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1257300,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1409100,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1470400,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1333200,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1202100,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 3234900,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3951700,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1647100,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 109583200,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2275200,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1587400,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1476300,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2363100,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 70042300,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1372100,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1082800,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3036300,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 505954100,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"4\" redemption history in the previous \"7\" to \"14\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"4\"",
                  "offset": 28
                },
                {
                  "val": "\"7\"",
                  "offset": 67
                },
                {
                  "val": "\"14\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4087100,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2136000,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 212693600,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 923300,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 788500,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1100100,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 370336200,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 699289700,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 103,
        "name": "User still eligible to redeem before reaching no limit for logon id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;9",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11574600,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1335200,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1244400,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1239900,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1412500,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1733000,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 3116500,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2990500,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2165400,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 70870200,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1054100,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 881600,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1003800,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2271300,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 81329400,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1134000,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 835700,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1943300,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 598440600,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"4\" redemption history in the previous \"7\" to \"14\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"4\"",
                  "offset": 28
                },
                {
                  "val": "\"7\"",
                  "offset": 67
                },
                {
                  "val": "\"14\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3472800,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2600200,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 204991900,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1238900,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1237700,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2207700,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 604085600,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 352126800,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 104,
        "name": "User still eligible to redeem before reaching global limit for no validation",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;10",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11298100,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1517700,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1281800,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1246400,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9254100,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 1646700,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2865800,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6318600,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3335900,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 186565400,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1191000,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1034300,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1100100,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1893000,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 72094300,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1213600,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1345200,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3530900,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 478250300,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"4\" redemption history in the previous \"7\" to \"14\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"4\"",
                  "offset": 28
                },
                {
                  "val": "\"7\"",
                  "offset": 67
                },
                {
                  "val": "\"14\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3690300,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2198500,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 127513300,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1321200,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1413100,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2556100,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 540278800,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 516439000,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 105,
        "name": "User still eligible to redeem before reaching period limit for no validation",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;11",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10459100,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1448600,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1430200,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1415000,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2377700,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 1285500,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 3404800,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2621800,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1083900,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 93139200,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 892600,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1206100,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1511600,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2512900,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 76497700,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1524700,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1122400,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2822200,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 492263900,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"4\" redemption history in the previous \"7\" to \"14\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"4\"",
                  "offset": 28
                },
                {
                  "val": "\"7\"",
                  "offset": 67
                },
                {
                  "val": "\"14\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2777500,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1662700,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 84405800,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1666700,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 998800,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1305500,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 501362200,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 516366600,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 106,
        "name": "User still eligible to redeem before reaching no limit for no validation",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-still-eligible-to-redeem-before-reaching-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;12",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9344800,
              "status": "passed"
            },
            "line": 26,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1218700,
              "status": "passed"
            },
            "line": 27,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1165400,
              "status": "passed"
            },
            "line": 28,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1247200,
              "status": "passed"
            },
            "line": 29,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1026900,
              "status": "passed"
            },
            "line": 30,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 31,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 1433800,
              "status": "passed"
            },
            "line": 34,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 35,
              "value": "[]"
            }
          },
          {
            "result": {
              "duration": 2915900,
              "status": "passed"
            },
            "line": 38,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2851300,
              "status": "passed"
            },
            "line": 41,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1936700,
              "status": "passed"
            },
            "line": 44,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 165380200,
              "status": "passed"
            },
            "line": 45,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 909600,
              "status": "passed"
            },
            "line": 46,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1162400,
              "status": "passed"
            },
            "line": 47,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 773300,
              "status": "passed"
            },
            "line": 48,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1801000,
              "status": "passed"
            },
            "line": 50,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 87811900,
              "status": "passed"
            },
            "line": 51,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1125700,
              "status": "passed"
            },
            "line": 52,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1473000,
              "status": "passed"
            },
            "line": 53,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3815200,
              "status": "passed"
            },
            "line": 54,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 620104400,
              "status": "passed"
            },
            "line": 60,
            "name": "[reward-transaction] create \"4\" redemption history in the previous \"7\" to \"14\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"4\"",
                  "offset": 28
                },
                {
                  "val": "\"7\"",
                  "offset": 67
                },
                {
                  "val": "\"14\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2581200,
              "status": "passed"
            },
            "line": 62,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1747400,
              "status": "passed"
            },
            "line": 65,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 163739600,
              "status": "passed"
            },
            "line": 66,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 925900,
              "status": "passed"
            },
            "line": 67,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 644200,
              "status": "passed"
            },
            "line": 68,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1591100,
              "status": "passed"
            },
            "line": 69,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "true"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 846183700,
              "status": "passed"
            },
            "line": 74,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 75,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 1466220700,
              "status": "passed"
            },
            "line": 84,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 85,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 184,
        "name": "User not eligible to redeem when reached global limit for logon id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-not-eligible-to-redeem-when-reached-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10147900,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1328300,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1117100,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1102400,
              "status": "passed"
            },
            "line": 114,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1712000,
              "status": "passed"
            },
            "line": 115,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 116,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1381600,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 120,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 4110800,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3138600,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1512700,
              "status": "passed"
            },
            "line": 129,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 133009900,
              "status": "passed"
            },
            "line": 130,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 746700,
              "status": "passed"
            },
            "line": 131,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 523800,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 618700,
              "status": "passed"
            },
            "line": 133,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1186100,
              "status": "passed"
            },
            "line": 135,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 64465400,
              "status": "passed"
            },
            "line": 136,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1069500,
              "status": "passed"
            },
            "line": 137,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 853100,
              "status": "passed"
            },
            "line": 138,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2384200,
              "status": "passed"
            },
            "line": 139,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 755659500,
              "status": "passed"
            },
            "line": 145,
            "name": "[reward-transaction] create \"3\" redemption history in the previous \"1\" to \"6\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"6\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2368700,
              "status": "passed"
            },
            "line": 147,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1497800,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 82832600,
              "status": "passed"
            },
            "line": 151,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1303800,
              "status": "passed"
            },
            "line": 152,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1099800,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3698400,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027message\u0027])",
                  "EQUAL",
                  "Reach Max Limit"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027][\u0027LOGON_ID\u0027][0])",
                  "EQUAL",
                  "REACH_MAX_LIMIT"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 443347400,
              "status": "passed"
            },
            "line": 162,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 163,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 456751300,
              "status": "passed"
            },
            "line": 172,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 173,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 185,
        "name": "User not eligible to redeem when reached global and period limit for logon id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-not-eligible-to-redeem-when-reached-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8813400,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1553400,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1257300,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1077200,
              "status": "passed"
            },
            "line": 114,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 777900,
              "status": "passed"
            },
            "line": 115,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 116,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 748900,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 120,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 1564500,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3750900,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1214600,
              "status": "passed"
            },
            "line": 129,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 133501500,
              "status": "passed"
            },
            "line": 130,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1096000,
              "status": "passed"
            },
            "line": 131,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 802400,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 988600,
              "status": "passed"
            },
            "line": 133,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1737100,
              "status": "passed"
            },
            "line": 135,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 83912700,
              "status": "passed"
            },
            "line": 136,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 841000,
              "status": "passed"
            },
            "line": 137,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 505700,
              "status": "passed"
            },
            "line": 138,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2424200,
              "status": "passed"
            },
            "line": 139,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 459483000,
              "status": "passed"
            },
            "line": 145,
            "name": "[reward-transaction] create \"3\" redemption history in the previous \"1\" to \"6\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"6\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3366300,
              "status": "passed"
            },
            "line": 147,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1883500,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 115305100,
              "status": "passed"
            },
            "line": 151,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1621900,
              "status": "passed"
            },
            "line": 152,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 928200,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1572900,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027message\u0027])",
                  "EQUAL",
                  "Reach Max Limit"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027][\u0027LOGON_ID\u0027][0])",
                  "EQUAL",
                  "REACH_MAX_LIMIT"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 784408600,
              "status": "passed"
            },
            "line": 162,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 163,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 567605300,
              "status": "passed"
            },
            "line": 172,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 173,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 186,
        "name": "User not eligible to redeem when reached global and period limit for device id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-not-eligible-to-redeem-when-reached-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9915100,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 727900,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 547600,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 653800,
              "status": "passed"
            },
            "line": 114,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 642800,
              "status": "passed"
            },
            "line": 115,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 116,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 814400,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 120,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 2563100,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3326100,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1512700,
              "status": "passed"
            },
            "line": 129,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 110256800,
              "status": "passed"
            },
            "line": 130,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1100000,
              "status": "passed"
            },
            "line": 131,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 824400,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1235900,
              "status": "passed"
            },
            "line": 133,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1958400,
              "status": "passed"
            },
            "line": 135,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 126661400,
              "status": "passed"
            },
            "line": 136,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1226900,
              "status": "passed"
            },
            "line": 137,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1518300,
              "status": "passed"
            },
            "line": 138,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2752900,
              "status": "passed"
            },
            "line": 139,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 445174200,
              "status": "passed"
            },
            "line": 145,
            "name": "[reward-transaction] create \"3\" redemption history in the previous \"1\" to \"6\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"6\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2634200,
              "status": "passed"
            },
            "line": 147,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2012800,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 110831900,
              "status": "passed"
            },
            "line": 151,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 854800,
              "status": "passed"
            },
            "line": 152,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 649700,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2382600,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027message\u0027])",
                  "EQUAL",
                  "Reach Max Limit"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027][\u0027DEVICE_ID\u0027][0])",
                  "EQUAL",
                  "REACH_MAX_LIMIT"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 337037400,
              "status": "passed"
            },
            "line": 162,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 163,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 547870600,
              "status": "passed"
            },
            "line": 172,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 173,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 187,
        "name": "User not eligible to redeem when reached global and period limit for logon and device id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-not-eligible-to-redeem-when-reached-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7627900,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1011100,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 639600,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 681000,
              "status": "passed"
            },
            "line": 114,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1518000,
              "status": "passed"
            },
            "line": 115,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 116,
              "value": "[\"LOGON_ID\",\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 883400,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 120,
              "value": "[\"GLOBAL\",\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 1481100,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1693200,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 927800,
              "status": "passed"
            },
            "line": 129,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 171736500,
              "status": "passed"
            },
            "line": 130,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1306000,
              "status": "passed"
            },
            "line": 131,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1140500,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1379500,
              "status": "passed"
            },
            "line": 133,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2061700,
              "status": "passed"
            },
            "line": 135,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 59019200,
              "status": "passed"
            },
            "line": 136,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2275400,
              "status": "passed"
            },
            "line": 137,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1731100,
              "status": "passed"
            },
            "line": 138,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2945300,
              "status": "passed"
            },
            "line": 139,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 396166700,
              "status": "passed"
            },
            "line": 145,
            "name": "[reward-transaction] create \"3\" redemption history in the previous \"1\" to \"6\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"6\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4392600,
              "status": "passed"
            },
            "line": 147,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1540700,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 68626100,
              "status": "passed"
            },
            "line": 151,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1965700,
              "status": "passed"
            },
            "line": 152,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 845600,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1929500,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027message\u0027])",
                  "EQUAL",
                  "Reach Max Limit"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027][\u0027LOGON_ID\u0027][0])",
                  "EQUAL",
                  "REACH_MAX_LIMIT"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 516214900,
              "status": "passed"
            },
            "line": 162,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 163,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 805194700,
              "status": "passed"
            },
            "line": 172,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 173,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 188,
        "name": "User not eligible to redeem when reached global limit for device id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-not-eligible-to-redeem-when-reached-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9633700,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1329800,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1366000,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1234300,
              "status": "passed"
            },
            "line": 114,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1929900,
              "status": "passed"
            },
            "line": 115,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 116,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 931900,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 120,
              "value": "[\"GLOBAL\"]"
            }
          },
          {
            "result": {
              "duration": 2046000,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "3",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3257200,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8009700,
              "status": "passed"
            },
            "line": 129,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 156927600,
              "status": "passed"
            },
            "line": 130,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1112700,
              "status": "passed"
            },
            "line": 131,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 674300,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 721400,
              "status": "passed"
            },
            "line": 133,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1380900,
              "status": "passed"
            },
            "line": 135,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 59640100,
              "status": "passed"
            },
            "line": 136,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1288100,
              "status": "passed"
            },
            "line": 137,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 865800,
              "status": "passed"
            },
            "line": 138,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2388100,
              "status": "passed"
            },
            "line": 139,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 482202800,
              "status": "passed"
            },
            "line": 145,
            "name": "[reward-transaction] create \"3\" redemption history in the previous \"1\" to \"6\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"6\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2223700,
              "status": "passed"
            },
            "line": 147,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1856900,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 65485000,
              "status": "passed"
            },
            "line": 151,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1049900,
              "status": "passed"
            },
            "line": 152,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1436400,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2660800,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027message\u0027])",
                  "EQUAL",
                  "Reach Max Limit"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027][\u0027DEVICE_ID\u0027][0])",
                  "EQUAL",
                  "REACH_MAX_LIMIT"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 588095300,
              "status": "passed"
            },
            "line": 162,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 163,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 485362400,
              "status": "passed"
            },
            "line": 172,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 173,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 189,
        "name": "User not eligible to redeem when reached period limit for logon id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-not-eligible-to-redeem-when-reached-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;7",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8429900,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1029300,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 995900,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1341200,
              "status": "passed"
            },
            "line": 114,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1349000,
              "status": "passed"
            },
            "line": 115,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 116,
              "value": "[\"LOGON_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1411900,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 120,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 2398300,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "30",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3434500,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1414400,
              "status": "passed"
            },
            "line": 129,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 86153800,
              "status": "passed"
            },
            "line": 130,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1041000,
              "status": "passed"
            },
            "line": 131,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 934000,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1108700,
              "status": "passed"
            },
            "line": 133,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2012300,
              "status": "passed"
            },
            "line": 135,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 63774500,
              "status": "passed"
            },
            "line": 136,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 927800,
              "status": "passed"
            },
            "line": 137,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 702600,
              "status": "passed"
            },
            "line": 138,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1770000,
              "status": "passed"
            },
            "line": 139,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 788738500,
              "status": "passed"
            },
            "line": 145,
            "name": "[reward-transaction] create \"3\" redemption history in the previous \"1\" to \"6\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"6\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2537700,
              "status": "passed"
            },
            "line": 147,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1346700,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 207417000,
              "status": "passed"
            },
            "line": 151,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 718000,
              "status": "passed"
            },
            "line": 152,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 496600,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1690900,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027message\u0027])",
                  "EQUAL",
                  "Reach Time Range Limit"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027][\u0027LOGON_ID\u0027][0])",
                  "EQUAL",
                  "REACH_TIME_RANGE_LIMIT"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 648185300,
              "status": "passed"
            },
            "line": 162,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 163,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 629151600,
              "status": "passed"
            },
            "line": 172,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 173,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 190,
        "name": "User not eligible to redeem when reached period limit for device id",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;user-not-eligible-to-redeem-when-reached-\u003ctype\u003e-limit-for-\u003cvalidation\u003e;;8",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 27246500,
              "status": "passed"
            },
            "line": 111,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1519800,
              "status": "passed"
            },
            "line": 112,
            "name": "[reward-transaction] prepare request data logonId with value \"(test_,random(10,NUMERIC),@test.com)\"",
            "match": {
              "arguments": [
                {
                  "val": "logonId",
                  "offset": 42
                },
                {
                  "val": "(test_,random(10,NUMERIC),@test.com)",
                  "offset": 62
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1455200,
              "status": "passed"
            },
            "line": 113,
            "name": "[reward-transaction] prepare request data deviceId with value \"random(23,l_alphanumeric)\"",
            "match": {
              "arguments": [
                {
                  "val": "deviceId",
                  "offset": 42
                },
                {
                  "val": "random(23,l_alphanumeric)",
                  "offset": 63
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1187600,
              "status": "passed"
            },
            "line": 114,
            "name": "[reward-transaction] prepare request data voucherSku with value \"(automation_,random(23,l_alphanumeric))\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 42
                },
                {
                  "val": "(automation_,random(23,l_alphanumeric))",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1185200,
              "status": "passed"
            },
            "line": 115,
            "name": "[reward-transaction] prepare request data validations with value :",
            "match": {
              "arguments": [
                {
                  "val": "validations",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 116,
              "value": "[\"DEVICE_ID\"]"
            }
          },
          {
            "result": {
              "duration": 1020800,
              "status": "passed"
            },
            "line": 119,
            "name": "[reward-transaction] prepare request data types with value :",
            "match": {
              "arguments": [
                {
                  "val": "types",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataWithMultilineText(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 120,
              "value": "[\"PERIOD\"]"
            }
          },
          {
            "result": {
              "duration": 2325400,
              "status": "passed"
            },
            "line": 123,
            "name": "[reward-transaction] prepare request data maximumConfiguration with value",
            "match": {
              "arguments": [
                {
                  "val": "maximumConfiguration",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "total",
                  "totalPerPeriod",
                  "period",
                  "validation",
                  "type"
                ]
              },
              {
                "cells": [
                  "30",
                  "3",
                  "7",
                  "request($[\u0027validations\u0027])",
                  "request($[\u0027types\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2178900,
              "status": "passed"
            },
            "line": 126,
            "name": "[reward-transaction] prepare request data createRuleRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "createRuleRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "maximumConfiguration"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2046600,
              "status": "passed"
            },
            "line": 129,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027createRuleRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027createRuleRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85402900,
              "status": "passed"
            },
            "line": 130,
            "name": "[reward-transaction] try POST request to \"rule/\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "rule/",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1292800,
              "status": "passed"
            },
            "line": 131,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1184600,
              "status": "passed"
            },
            "line": 132,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1314200,
              "status": "passed"
            },
            "line": 133,
            "name": "[reward-transaction] response data \"response($[\u0027ruleResponse\u0027])\" should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "response($[\u0027ruleResponse\u0027])",
                  "offset": 36
                },
                {
                  "val": "should not",
                  "offset": 65
                }
              ],
              "location": "ApiBaseSteps.responseDataShouldNotBeEmpty(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2006300,
              "status": "passed"
            },
            "line": 135,
            "name": "[reward-transaction] prepare pathParam for voucherSku with value \"request($[\u0027voucherSku\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "voucherSku",
                  "offset": 43
                },
                {
                  "val": "request($[\u0027voucherSku\u0027])",
                  "offset": 66
                }
              ],
              "location": "ApiBaseSteps.setPathParamSteps(String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 123672300,
              "status": "passed"
            },
            "line": 136,
            "name": "[reward-transaction] try GET request to \"rule/{voucherSku}\"",
            "match": {
              "arguments": [
                {
                  "val": "GET",
                  "offset": 25
                },
                {
                  "val": "rule/{voucherSku}",
                  "offset": 41
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1024300,
              "status": "passed"
            },
            "line": 137,
            "name": "[reward-transaction] assign previous response data to ruleResponse",
            "match": {
              "arguments": [
                {
                  "val": "ruleResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 978600,
              "status": "passed"
            },
            "line": 138,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2368500,
              "status": "passed"
            },
            "line": 139,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027voucherSku\u0027])",
                  "EQUAL",
                  "request($[\u0027voucherSku\u0027])"
                ]
              },
              {
                "cells": [
                  "response($[\u0027ruleResponse\u0027][\u0027value\u0027][\u0027maximumConfiguration\u0027])",
                  "EQUAL",
                  "request($[\u0027maximumConfiguration\u0027])"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 495086000,
              "status": "passed"
            },
            "line": 145,
            "name": "[reward-transaction] create \"3\" redemption history in the previous \"1\" to \"6\" days",
            "match": {
              "arguments": [
                {
                  "val": "\"3\"",
                  "offset": 28
                },
                {
                  "val": "\"1\"",
                  "offset": 67
                },
                {
                  "val": "\"6\"",
                  "offset": 74
                }
              ],
              "location": "RewardTransactionSteps.createRandomRedemptionHistoryInPeriod(String,String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3021700,
              "status": "passed"
            },
            "line": 147,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "request($[\u0027voucherSku\u0027])",
                  "request($[\u0027logonId\u0027])",
                  "request($[\u0027deviceId\u0027])"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1604900,
              "status": "passed"
            },
            "line": 150,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 123299400,
              "status": "passed"
            },
            "line": 151,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 742500,
              "status": "passed"
            },
            "line": 152,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 615800,
              "status": "passed"
            },
            "line": 153,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1704300,
              "status": "passed"
            },
            "line": 154,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027message\u0027])",
                  "EQUAL",
                  "Reach Time Range Limit"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027errors\u0027][\u0027DEVICE_ID\u0027][0])",
                  "EQUAL",
                  "REACH_TIME_RANGE_LIMIT"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027][\u0027eligible\u0027])",
                  "EQUAL",
                  "false"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 553069600,
              "status": "passed"
            },
            "line": 162,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "When ",
            "doc_string": {
              "line": 163,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          },
          {
            "result": {
              "duration": 512930500,
              "status": "passed"
            },
            "line": 172,
            "name": "[reward-transaction] assign response data dbResponse with value :",
            "match": {
              "arguments": [
                {
                  "val": "dbResponse",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.assignDataToResponseFromMultiline(String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "line": 173,
              "value": "  mongo(\n    db(rewardtransaction),\n    collection(redemption_rule_history),\n    delete({\n      variable : \u0027,request($[\u0027voucherSku\u0027]),\u0027\n    })\n  )"
            }
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Positive"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 208,
        "name": "Check redemption eligibility when logonId is empty",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;check-redemption-eligibility-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10052700,
              "status": "passed"
            },
            "line": 194,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2183900,
              "status": "passed"
            },
            "line": 195,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "random(23)",
                  "",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1298200,
              "status": "passed"
            },
            "line": 198,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 68417500,
              "status": "passed"
            },
            "line": 199,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1180100,
              "status": "passed"
            },
            "line": 200,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 978600,
              "status": "passed"
            },
            "line": 201,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2700600,
              "status": "passed"
            },
            "line": 202,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 209,
        "name": "Check redemption eligibility when deviceId is empty",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;check-redemption-eligibility-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10456700,
              "status": "passed"
            },
            "line": 194,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1990000,
              "status": "passed"
            },
            "line": 195,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "random(23)",
                  "random(23)",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1084600,
              "status": "passed"
            },
            "line": 198,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 69605400,
              "status": "passed"
            },
            "line": 199,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 715300,
              "status": "passed"
            },
            "line": 200,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 925800,
              "status": "passed"
            },
            "line": 201,
            "name": "[reward-transaction] response statusCode should be 200 and success should be true",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 51
                },
                {
                  "val": "true",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1635900,
              "status": "passed"
            },
            "line": 202,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "true"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "200"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 210,
        "name": "Check redemption eligibility when voucherSku is empty",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;check-redemption-eligibility-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9311400,
              "status": "passed"
            },
            "line": 194,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1721200,
              "status": "passed"
            },
            "line": 195,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "",
                  "random(23)",
                  "random(23)"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1010200,
              "status": "passed"
            },
            "line": 198,
            "name": "[reward-transaction] prepare body request with value \"request($[\u0027eligibilityRequest\u0027])\"",
            "match": {
              "arguments": [
                {
                  "val": "request($[\u0027eligibilityRequest\u0027])",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 93691200,
              "status": "passed"
            },
            "line": 199,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1251700,
              "status": "passed"
            },
            "line": 200,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1181100,
              "status": "passed"
            },
            "line": 201,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1822500,
              "status": "passed"
            },
            "line": 202,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 211,
        "name": "Check redemption eligibility when body is empty",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;check-redemption-eligibility-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6696600,
              "status": "passed"
            },
            "line": 194,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1050800,
              "status": "passed"
            },
            "line": 195,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "",
                  "",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1336300,
              "status": "passed"
            },
            "line": 198,
            "name": "[reward-transaction] prepare body request with value \"{}\"",
            "match": {
              "arguments": [
                {
                  "val": "{}",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104954600,
              "status": "passed"
            },
            "line": 199,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1456700,
              "status": "passed"
            },
            "line": 200,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 961100,
              "status": "passed"
            },
            "line": 201,
            "name": "[reward-transaction] response statusCode should be 400 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "400",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2022900,
              "status": "passed"
            },
            "line": 202,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "400"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      },
      {
        "line": 212,
        "name": "Check redemption eligibility when body is not valid",
        "description": "",
        "id": "check-redemption-eligibility-in-reward-transaction;check-redemption-eligibility-when-\u003cidentifier\u003e-is-\u003cvalue\u003e;;6",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10056300,
              "status": "passed"
            },
            "line": 194,
            "name": "[reward-transaction] using service with alias rewardtransaction",
            "match": {
              "arguments": [
                {
                  "val": "rewardtransaction",
                  "offset": 46
                }
              ],
              "location": "ApiBaseSteps.initService(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1557100,
              "status": "passed"
            },
            "line": 195,
            "name": "[reward-transaction] prepare request data eligibilityRequest with value",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityRequest",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.prepareRequestDataStep(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "voucherSku",
                  "logonId",
                  "deviceId"
                ]
              },
              {
                "cells": [
                  "",
                  "",
                  ""
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1244500,
              "status": "passed"
            },
            "line": 198,
            "name": "[reward-transaction] prepare body request with value \"abc\"",
            "match": {
              "arguments": [
                {
                  "val": "abc",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.setBodyRequestSteps(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62530300,
              "status": "passed"
            },
            "line": 199,
            "name": "[reward-transaction] try POST request to \"redemption/_eligibility\"",
            "match": {
              "arguments": [
                {
                  "val": "POST",
                  "offset": 25
                },
                {
                  "val": "redemption/_eligibility",
                  "offset": 42
                }
              ],
              "location": "ApiBaseSteps.whenHitEndPointWithoutParameter(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1125100,
              "status": "passed"
            },
            "line": 200,
            "name": "[reward-transaction] assign previous response data to eligibilityResponse",
            "match": {
              "arguments": [
                {
                  "val": "eligibilityResponse",
                  "offset": 54
                }
              ],
              "location": "ApiBaseSteps.assignResponseData(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1013300,
              "status": "passed"
            },
            "line": 201,
            "name": "[reward-transaction] response statusCode should be 500 and success should be false",
            "match": {
              "arguments": [
                {
                  "val": "500",
                  "offset": 51
                },
                {
                  "val": "false",
                  "offset": 77
                }
              ],
              "location": "ApiBaseSteps.statusCodeAndSuccessShouldeBe(Integer,Boolean)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1691600,
              "status": "passed"
            },
            "line": 202,
            "name": "[reward-transaction] do these validations",
            "match": {
              "location": "ApiBaseSteps.doTheseValidation(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "actual",
                  "validation",
                  "expectation"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027value\u0027])",
                  "NOT_EMPTY",
                  "false"
                ]
              },
              {
                "cells": [
                  "response($[\u0027eligibilityResponse\u0027][\u0027code\u0027])",
                  "EQUAL",
                  "500"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@RedemptionEligibilityFeature"
          },
          {
            "name": "@RewardTransactionValidation"
          },
          {
            "name": "@TestSuiteId\u003d13825489"
          },
          {
            "name": "@Negative"
          },
          {
            "name": "@Component"
          }
        ]
      }
    ],
    "name": "Check redemption eligibility in reward transaction",
    "description": "",
    "id": "check-redemption-eligibility-in-reward-transaction",
    "keyword": "Feature",
    "uri": "src/test/resources/features/component/validation-controller/RedemptionEligibility.feature",
    "tags": [
      {
        "name": "@RedemptionEligibilityFeature",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@RewardTransactionValidation",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 31
        }
      },
      {
        "name": "@TestSuiteId\u003d13825489",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 60
        }
      }
    ]
  }
]